using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class Adm962xts21qtj_CCTransactionReport : System.Web.UI.Page
{
    DynamicDtls objgdb = new DynamicDtls();
    DataSet ds; string searchText;
    public int PageNo;
    public int Pagesize = Convert.ToInt16(ConfigurationManager.AppSettings["gridPageSize"]);

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            detsdv.Visible = false;
            fill_IncType();
            fill_SelectOne();
            ddlJumpToPage.Items.Clear();
            int TotalRows = this.BindResult(1);
            this.populateList(TotalRows);
        }
    }
    public DataSet METHOD(string FRM_DT, string TO_DT, string INCTYPE, string COLUMN, string VALUE, string FLAG, string PG_SIZE, string CURRENT_PG)
    {
        try
        {
            int TotalRecords = 0;
            ds = new DataSet();
            ds = objgdb.ByProcedure("CashCreditWALLET_REPORT_PROC", new string[] { "FRM_DT", "TO_DT", "INCTYPE", "COLUMN", "VALUE", "FLAG", "PG_SIZE", "CURRENT_PG" }, new string[] { FRM_DT, TO_DT, INCTYPE, COLUMN, VALUE, FLAG, PG_SIZE, CURRENT_PG }, "ByDataset");
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = new DB().EmptyMessage("Your request could not be completed."); }
        finally
        {
            ds.Dispose();
        }
        return ds;
    }
    public void fill_IncType()
    {
        try
        {
            ddl_IncType.DataSource = METHOD("", "", "", "", "", "INCTYPE", "", "");
            ddl_IncType.DataTextField = "IncomeType";
            ddl_IncType.DataValueField = "IncomeType";
            ddl_IncType.DataBind();
        }
        catch
        { }
    }
    public void fill_SelectOne()
    {
        try
        {
            DDLSrchByDjGt.DataSource = METHOD("", "", "", "", "", "SELECT_ONE", "", "");
            DDLSrchByDjGt.DataTextField = "SELECT_ONE_TXT";
            DDLSrchByDjGt.DataValueField = "SELECT_ONE_VALUE";
            DDLSrchByDjGt.DataBind();
        }
        catch
        { }
    }
    protected void btnSearch_Click(object sender, EventArgs e)
    {
        try
        {
            ddlJumpToPage.Items.Clear();
            int TotalRows = this.BindResult(1);
            this.populateList(TotalRows);
        }
        catch (Exception ex)
        {
        }
        finally
        {
        }
    }
    protected void DDLSrchByDjGt_SelectedIndexChanged(object sender, EventArgs e)
    {
        detsdv.Visible = false;
        if (DDLSrchByDjGt.SelectedValue == "ALL")
        {
            DDLDownPos.Visible = false;
            txtSearch.Visible = false;
        }
        //else if (DDLSrchByDjGt.SelectedValue == "mname")
        //{
        //    DDLDownPos.DataSource = METHOD("", "", "", "", "", DDLSrchByDjGt.SelectedValue, "", "");
        //    DDLDownPos.DataTextField = "MNAME";
        //    DDLDownPos.DataValueField = "MNAME";
        //    DDLDownPos.DataBind();
        //    DDLDownPos.Visible = true;
        //    txtSearch.Visible = false;
        //}
        //else if (DDLSrchByDjGt.SelectedValue == "memid")
        //{
        //    DDLDownPos.DataSource = METHOD("", "", "", "", "", DDLSrchByDjGt.SelectedValue, "", "");
        //    DDLDownPos.DataTextField = "MEMID";
        //    DDLDownPos.DataValueField = "MEMID";
        //    DDLDownPos.DataBind();
        //    DDLDownPos.Visible = true;
        //    txtSearch.Visible = false;
        //}
        //else if (DDLSrchByDjGt.SelectedValue != "memid" && DDLSrchByDjGt.SelectedValue != "mname" && DDLSrchByDjGt.SelectedValue != "ALL")
        //{
        //    DDLDownPos.Visible = false;
        //    txtSearch.Visible = true;
        //}
        else
        {
            DDLDownPos.Visible = false;
            txtSearch.Visible = true;
            detsdv.Visible = true;

        }
    }
    private void populateList(int TotalRows)
    {
        lblTotRec.Text = Convert.ToString(TotalRows);
        PageNo = Convert.ToInt32(Math.Floor(Convert.ToDouble((TotalRows / Pagesize))) + 1);
        for (int i = 1; i <= PageNo; i++)
        {
            ddlJumpToPage.Items.Add(new ListItem(i.ToString(), i.ToString()));
        }
        CountingShow();
    }
    private int BindResult(int currentPage)
    {
        int TotalRows = 0;
        try
        {
            if (DDLDownPos.Visible == false && txtSearch.Visible == false)
            {
                searchText = "";
            }
            else if (DDLDownPos.Visible == false)
            {
                searchText = txtSearch.Text;
            }
            else if (txtSearch.Visible == false)
            {
                searchText = DDLDownPos.SelectedValue;
            }
            ds = new DataSet();
            ds = METHOD(txtFromDate.Text, txtToDate.Text, "", "", "", "GETTOTAL", "", "");
            lblTotalSum.Text = "TOTAL CREDIT : " + ds.Tables[0].Rows[0]["TOTCREDIT"].ToString() + " ,           TOTAL DEBIT : " + ds.Tables[0].Rows[0]["TOTDEBIT"].ToString() + "   ,     BALANCE :" + ds.Tables[0].Rows[0]["BALANCE"].ToString();
            ds.Dispose();
            ds = new DataSet();
            ds = METHOD(txtFromDate.Text, txtToDate.Text, ddl_IncType.SelectedValue, DDLSrchByDjGt.SelectedValue, searchText.ToString(), "ReportData", (ConfigurationManager.AppSettings["gridPageSize"]).ToString(), currentPage.ToString());
            TotalRows = Convert.ToInt32(ds.Tables[1].Rows[0]["TOTALRECORD"]);
            if (TotalRows == 0)
            {
                lblMsg.Visible = true;
                gvinvoiceno.Visible = false;
                lblMsg.Text = new DB().EmptyMessage(ds.Tables[0].Rows[0]["MSG"].ToString());
            }
            else
            {
                lblMsg.Visible = false;
                lblMsg.Text = "";
                gvinvoiceno.Visible = true;
                gvinvoiceno.DataSource = ds.Tables[0];
                gvinvoiceno.DataBind();
            }
            return TotalRows;
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = "Your request could not be completed."; }
        return TotalRows;
    }
    public void CountingShow()
    {
        if (ddlJumpToPage.SelectedItem.Text == "1")
        {
            PageNo = 1;
            //Pagesize
        }
        else
        {
            PageNo = 1 + int.Parse(ddlJumpToPage.SelectedItem.Text);
            Pagesize = (Pagesize * int.Parse(ddlJumpToPage.SelectedItem.Text));
        }
    }
    protected void PageChanged(object sender, EventArgs e)
    {
        int Page = Convert.ToInt32(ddlJumpToPage.SelectedItem.Value);
        this.BindResult(Page);
        CountingShow();
    }
    protected void gvinvoiceno_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {

    }
    //protected void btnexporttoexport_Click(object sender, EventArgs e)
    //{
    //    Response.ClearContent();
    //    Response.Buffer = true;
    //    Response.AddHeader("content-disposition", string.Format("attachment; filename={0}", "Report.xls"));
    //    Response.ContentType = "application/ms-excel";
    //    StringWriter sw = new StringWriter();
    //    HtmlTextWriter htw = new HtmlTextWriter(sw);
    //    gvinvoiceno.AllowPaging = false;

    //    ddlJumpToPage.Items.Clear();
    //    int TotalRows = this.BindResult(1);
    //    this.populateList(TotalRows);

    //    //Change the Header Row back to white color
    //    gvinvoiceno.HeaderRow.Style.Add("background-color", "#FFFFFF");
    //    //Applying stlye to gridview header cells
    //    for (int i = 0; i < gvinvoiceno.HeaderRow.Cells.Count; i++)
    //    {
    //        gvinvoiceno.HeaderRow.Cells[i].Style.Add("background-color", "#df5015");
    //    }
    //    gvinvoiceno.RenderControl(htw);
    //    Response.Write(sw.ToString());
    //    Response.End();
    //}
    public override void VerifyRenderingInServerForm(Control control)
    {
        /* Verifies that the control is rendered */
    }
}
