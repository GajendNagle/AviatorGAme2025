using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Net.Mail;

public partial class Adm962xts21qtj_AdminDipositNow : System.Web.UI.Page
{
    DynamicDtls objgdb = new DynamicDtls();
    DataSet ds,DS;
    public string Mem_email = "", MName = "", TotTokenBuy="";
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            if (Request.QueryString["ReqID"] != null)
            {
                txtAmt.Text = Request.QueryString["Amount"].ToString();
                txtUserid.Text = Request.QueryString["Member"].ToString();
                ViewState["SampleText"] =Request.QueryString["ReqID"].ToString();
               

            }
            TokenRate();
        }
    }
    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        try
        {
            ds = objgdb.ByProcedure("Inst_ProcMemInvestmentDetails", new string[] { "Memid", "Amt", "Comment", "PaymentMode", "InstMode", "PaymentId", "DateAdm", "TransId", "FromMemId" }
            , new string[] { txtUserid.Text, txtAmt.Text, txtComment.Text, ddlpaymentMode.SelectedItem.Value, ddlDepoBy.SelectedItem.Text, "", txtDate.Text, "", txtfrmUser.Text.Trim() }, "das");
            if (Request.QueryString["ReqID"] != null)
            {
                if (ViewState["SampleText"].ToString() == Request.QueryString["ReqID"].ToString())
                {
                    dpstReqChange();
                }
                else
                { }
            }
            if (ds.Tables[0].Rows[0]["SubmitStatus"].ToString() == "Ok")
            {
                // this.SendEmail();
                lblMsg.Text = objgdb.UpdateMessage("Deposit done Successfully...!");
                lblMsg.ForeColor = System.Drawing.Color.Green;
                //string smsMessage = objgdb.GetApprovedAssign("", "", txtAmt.Text.Trim());
                //new SendSms().SendSMSToUserIDMob(smsMessage, txtUserid.Text.Trim());
                txtUserid.Text = "";
                
                txtComment.Text = "";
                txtDate.Text = "";

                Mem_email = ds.Tables[0].Rows[0]["Mem_email"].ToString();
                //ForMemEmail = ds.Tables[0].Rows[0]["ForMemEmail"].ToString();
                //SpName = ds.Tables[0].Rows[0]["SpName"].ToString() + " {" + UserID.Trim() + "}";
                MName = ds.Tables[0].Rows[0]["MName"].ToString();
                TotTokenBuy = ds.Tables[0].Rows[0]["TotTokenBuy"].ToString();
                
                try
                {
                    string Message123 =

                  //   @"<div style='margin: 0;padding: 0;'><div style='width: 100%;height: 100%;background-color:#fafafa ;'> <div style='margin:0 auto; width:600px; height:100%; font-family:verdana;'><div style='background-color: #fafafa; padding: 15px 0 15px;'><img src='http://" + DynamicDtls.WebSite2 + "/website-logo/logo1.svg' alt='logo' style=' margin-left: 10px; height: auto; width: 150px; '/> <strong style='float: right;padding-right: 10px;'>For 24/7 support </strong> <div style=' padding: 0 10px 0px; margin-top: -20px; text-align: right; font-family: sans-serif;'>" + DynamicDtls.Email + "</div></div><div style=' width: 100%; background-color: white; border-top: 11px solid #57ab57; padding: 20px 0 20px; '> <h3 style=' font-size:29px;margin: 0; text-align: center; '> <span style='color:Green;font-weight:bolder'>Hi,</span> " + MName + "</h3><p style=' text-align: center; font-size: 20px;margin: 5px;font-family: sans-serif;'>Congratulations !!!<br />You have been Successfully Deposited $ " + txtAmt.Text.Trim() + ".</p></div><div style=' background-color:#058205;width:100%; padding: 20px 0 20px; text-align:left; '> <p style='font-family:Verdana;font-size: 19px; color:white; margin-left:22px;'>Thanks & Regards <br/> Support Team " + DynamicDtls.WebSite2 + "</p></div></div><div style='background-color: #E9E9E9; margin-top: -12px'> <div style='margin:0 auto; width:600px; height:100%; font-family:verdana; text-align:center;'><div><p style=' color: gray; font-size: 12px;    padding-top: 10px; '> Please do not reply to this email. Email send to this address will not be answered.</p></div></div></div></div></div>";
                  @"<table width='100%' border='0' cellspacing='0' cellpadding='0' bgcolor='#f5f5f5' style='max-width:896px; margin: 0 auto;'> <tbody> <tr> <td align='center' width='100%'> <table width='100%' border='0' cellspacing='0' cellpadding='0' style='font-family: Roboto, Lato,Helvetica,sans; color: #354147;'> <tbody> <tr> <td valign='bottom' width='12%'> <table bgcolor='#f5f5f5' width='100%' style='width:100%'> <tbody> <tr> <td width='100%' height='550'></td></tr></tbody> </table> </td><td style='min-width:350px'> <table border='0' cellspacing='0' cellpadding='0' width='100%'> <tbody> <tr> <td width='100%' align='center'> <table border='0' cellspacing='0' cellpadding='0' width='100%' style='background-color: #009688;'> <tbody> <tr> <td align='center' style='padding-bottom:11px'> <a href='' style='display:inline-block' target='_blank'><img src='http://" + DynamicDtls.WebSite2 + "/Website-Logo/MailLogo.svg' alt='logo' style='padding: 15px 0 0;' border='0'></a> </td></tr></tbody> </table> </td></tr></tbody> </table><table border='0' cellspacing='0' cellpadding='0' width='100%' bgcolor='#fff'> <tbody> <tr> <td height='50'></td> </tr> <tr> <td> <table border='0' cellspacing='0' cellpadding='0' width='100%'> <tbody> <tr> <td> <h3 style=' font-size:29px;margin: 0; text-align: center; '> <span style='color: #009688; font-weight: bolder'>Hi,</span> " + MName + "</h3> <br><p style=' text-align: center; font-size: 17px;margin: 5px;font-family: sans-serif;'>Congratulations !!!</p><p style=' text-align: center;font-size: 17px;margin: 5px;font-family: sans-serif;'>You have been Successfully Deposited  <span style='color: #e85038;'> " + TotTokenBuy + " TRX .</span></p></div><br> </td> </tr> </tbody> </table> </td>  </tr> <tr> </tbody> </table> <table width='100%' border='0' cellspacing='0' cellpadding='0'> <tbody> <tr bgcolor='#009688'> <td> <table width='100%' border='0' cellspacing='0' cellpadding='0'> <tbody> <tr> <td height='23'> <img src='' width='1' height='1' alt='' style='display: block;'/> </td></tr><tr> <td valign='top' align='center' width='100%' height='100%'> <div style='display: inline-block;'> <table border='0' cellspacing='0' cellpadding='0' style='width: 100%; float: right;'> <tbody> <tr> <td height='40px'> <table style='margin:0 auto;border-collapse:collapse!important;border-spacing:0!important;table-layout:fixed!important;word-break:break-word!important;word-wrap:break-word!important' border='0' cellspacing='0' cellpadding='0' align='center'> <tbody> <tr> <td style='padding: 3px 0 6px; border-collapse: collapse' colspan='4' align='center' valign='top' width='100%'> <img src='http://" + DynamicDtls.WebSite2 + "/Website-Logo/MailLogo.svg' alt='logo' style='padding: 0; height: auto !important; outline: none; text-decoration: none' border='0'> </td></tr><tr> <td style='border-collapse:collapse' colspan='4' height='10' width='100%'></td></tr><tr style='text-align:center'> <td style='border-collapse:collapse' colspan='4' height='20' width='100%'> <font style='font-size: 13px;color: white;text-align: center'>Copyright &copy; 2024.&nbsp;All Rights Reserved. </font> </td></tr><tr> <td style='border-collapse:collapse' colspan='4' height='20' width='100%'></td></tr></tbody> </table> </td></tr></tbody> </table> </div></td></tr><tr> <td height='30'> <img src='' width='1' height='1' alt='' style='display: block;'/> </td></tr></tbody> </table> </td></tr></tbody> </table> </td><td valign='bottom' width='12%'> <table bgcolor='#f5f5f5' width='100%' style='width:100%'> <tbody> <tr> <td width='100%' height='550'></td></tr></tbody> </table> </td></tr></tbody> </table> </td></tr></tbody> </table>";
                    this.SendEmailToUser(Mem_email, "Deposit Confirmation !", Message123);
                }
                catch { }
                txtAmt.Text = "";
                
            }
            else
            {
                lblMsg.Text = objgdb.ErrorMsg(ds.Tables[0].Rows[0]["Error"].ToString());
            }
           
        }
        catch (Exception ex)
        {
            objgdb.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            lblMsg.Text = objgdb.ErrorMsg("Your request could not be completed.");
        }
    }
    //protected void SendEmail()
    //{
    //    try
    //    {
    //        MailSenderByEmail objSendMail = new MailSenderByEmail();
    //        //objSendMail.MailFormat("UserDepositDone", txtUserid.Text, "", txtAmt.Text, "", "");
    //    }
    //    catch { }
    //}

    protected void SendEmailToUser(string EmailId, string Subjects, string Message)
    {
        objgdb.FillWebSiteEmailCompany();
        MailSenderByEmail mailsend = new MailSenderByEmail();

        try
        {
            mailsend.SendMailMessage(DynamicDtls.Email, Subjects, Message, EmailId);
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    protected void txtUserid_TextChanged(object sender, EventArgs e)
    {
        try
        {
            ds = objgdb.ByProcedure("GetFullName", new string[] { "MemId" } , new string[] { txtUserid.Text.Trim() } , "das");
            if (ds.Tables[0].Rows.Count > 0)
            {
                lblNameFill.Text = "";
                lblNameFill.Text = ds.Tables[0].Rows[0]["FullName"].ToString();
            }
            else
            {
                txtUserid.Text = "";
                lblNameFill.Text = "Member ID Does Not Exist.";
            }
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = objgdb.ErrorMsg("Your request could not be completed."); }
        finally
        {
            if (ds != null) { ds.Dispose(); };
        }
    }

    protected void txtfrmUser_TextChanged(object sender, EventArgs e)
    {
        try
        {
            ds = objgdb.ByProcedure("GetFullName", new string[] { "MemId" } , new string[] { txtfrmUser.Text.Trim() } , "das");
            if (ds.Tables[0].Rows.Count > 0)
            {
                lblfrmUser.Text = "";
                lblfrmUser.Text = ds.Tables[0].Rows[0]["FullName"].ToString();
            }
            else
            {
                txtfrmUser.Text = "";
                lblfrmUser.Text = "Mem-ID Does Not Exist.";
            }
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = objgdb.ErrorMsg("Sorry, Something is wrong please try later !"); }
        finally
        {
            if (ds != null) { ds.Dispose(); };
        }
    }

    protected void ddlDepoBy_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlDepoBy.SelectedItem.Text == "By User")
        {
            FmMemID.Visible = true;
        }
        else
        {
            lblfrmUser.Text = "";
            txtfrmUser.Text = "";
            FmMemID.Visible = false;
        }
    }

    public void dpstReqChange()
    {
        try
        {
            DS = new DataSet();
            DS = objgdb.ByProcedure("ADMIN_DPST_REQ", new string[] { "ApprovedAmt", "UpdateRemark", "STATUS", "ReqID" } , new string[] { txtAmt.Text.Trim(), txtComment.Text.Trim(), "COMPLETED", ViewState["SampleText"].ToString() }, "get");
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = objgdb.ErrorMsg("Your request could not be completed."); }
        finally
        {
            if (DS != null) { DS.Dispose(); };
        }
    }
    public void TokenRate()
    {
        
    }

    protected void txtAmt_TextChanged(object sender, EventArgs e)
    {
        try
        {
            DS = new DataSet();
            DS = objgdb.ByProcedure("TokenRate", new string[] { "Type" }, new string[] { "TokenRate" }, "get");
            //lbltokenrate.Text = DS.Tables[0].Rows[0]["Tokenrate"].ToString();


            Double Tokenrat = Convert.ToDouble(DS.Tables[0].Rows[0]["Tokenrate"].ToString());
            Double amount = Convert.ToDouble(txtAmt.Text);
            lbltokenrate1.Text = "1TRX :" + Tokenrat + " TRX/ Net Token :" + (Tokenrat * amount).ToString() + " TRX";
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = objgdb.ErrorMsg("Your request could not be completed."); }
        finally
        {
            if (DS != null) { DS.Dispose(); };
        }

    } 
}
