using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Text;
using System.Security.Cryptography;
public partial class Admin_Pinsales : System.Web.UI.Page
{
    DynamicDtls objDynamicDtls = new DynamicDtls();
    DataSet ds,DS;
    string user, RIDUSER;
    string MobiUSD, mobno, Mname;
    DB objdb = new DB();
    static string PackageAmt, PkgName;
   
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Request.Cookies["Get563lnr43lbt"] != null)
        {
            user = DB.base64Decod(Request.Cookies["Get563lnr43lbt"].Value);
            
            if (!IsPostBack)
            {
                try { objDynamicDtls.FillWebSiteEmailCompany(); }
                catch { Alert.Show("Please Refresh Your Page !"); }
                FILLFILD("Load");
                txtPins.Text = "0";
                lblamount.Text = "0";
                txtMemID.Focus();


                if (Request.QueryString["RID"] != null)
                {
                    ds = objDynamicDtls.ByProcedure("[ProFillPinReqEntry]", new string[] { "ReqID" } , new string[] { Request.QueryString["RID"].ToString() }, "BY DATASET");
                    if (ds.Tables[0].Rows[0]["Status"].ToString().ToUpper() == "PENDING")
                    {
                        txtMemID.Text = ds.Tables[0].Rows[0]["BranchID"].ToString();
                        txtMemID.ReadOnly = true;
                        txtPins.Text = ds.Tables[0].Rows[0]["NoOfPin"].ToString();
                        txtPins.ReadOnly = true;
                        lblamount.Text = ds.Tables[0].Rows[0]["Amount"].ToString();
                        ddpaid.Text = ds.Tables[0].Rows[0]["PurchaseType"].ToString();
                        DDLPACKAGE.Items.Clear();
                        DDLPACKAGE.Items.Add(new ListItem(ds.Tables[0].Rows[0]["PackageVol"].ToString(),
                        ds.Tables[0].Rows[0]["Package"].ToString()));
                    }
                    
                }
            }
        }
        else
        {
            Response.Redirect("../login.html");
        }
    }

    public void FILLFILD(string type)
    {
        if (type == "Load")
        {

            ds = objDynamicDtls.ByProcedure("PIN_Generate", new string[] { "MEMBER_ID", "NO_OF_PINS", "AMOUNT", "REMARK", "PACKAGE", "PIN_TYPE", "PASSWORD", "IS_ADMIN", "FLAG", "CHECKTYPE", "ReqID" } , new string[] { user, "", "", "", "", "", "", "GENERATED BY ADMIN", "INNO", "ADMININSERT", "" }, "BY DATASET");

            txtinvoiceno.Text = ds.Tables[0].Rows[0][0].ToString();
            
            ddpaid.DataSource = ds.Tables[1];    
            ddpaid.DataTextField = "PinType";
            ddpaid.DataValueField = "PinType";
            ddpaid.DataBind();
            ddpaid.Items.Insert(0, "--Select--");

            
        }
        if (type == "PakageDtl")
        {
            ds = objDynamicDtls.ByProcedure("PIN_Generate", new string[] { "MEMBER_ID", "NO_OF_PINS", "AMOUNT", "REMARK", "PACKAGE", "PIN_TYPE", "PASSWORD", "IS_ADMIN", "FLAG", "CHECKTYPE", "ReqID" } , new string[] { user, "", "", "", "", ddpaid.SelectedItem.Text, "GENERATED BY ADMIN", "", "PKGS", "ADMININSERT", "" }, "BY DATASET");

            DDLPACKAGE.DataSource = ds.Tables[0];
            DDLPACKAGE.DataTextField = "Package";
            DDLPACKAGE.DataValueField = "PackageName";
            DDLPACKAGE.DataBind();

            PackageAmt = ds.Tables[0].Rows[0]["Amt"].ToString();
            try
            {
                if (Request.QueryString["RID"] != null)
                {
                    DDLPACKAGE.Items.FindByValue(PkgName).Selected = true;
                }
            }
            catch { }


            CalPinAmt();
        }

        if (type == "SelPkgDet")
        {
            ds = objDynamicDtls.ByProcedure("PIN_Generate", new string[] { "MEMBER_ID", "NO_OF_PINS", "AMOUNT", "REMARK", "PACKAGE", "PIN_TYPE", "PASSWORD", "IS_ADMIN", "FLAG", "CHECKTYPE", "ReqID" } , new string[] { user, "", "", "", DDLPACKAGE.SelectedValue.ToString(), "", "GENERATED BY ADMIN", "", "DETPKG", "ADMININSERT", "" }, "BY DATASET");

            PackageAmt = ds.Tables[0].Rows[0]["Amt"].ToString();
            try
            {
                if (Request.QueryString["RID"] != null)
                {
                    DDLPACKAGE.Items.FindByValue(PkgName).Selected = true;
                }
            }
            catch { }


            CalPinAmt();
        }

    }  
    protected void btnGeneratePins_Click(object sender, EventArgs e)
    {
       
        if (Request.QueryString["RID"] != null)
        {
            RIDUSER = Request.QueryString["RID"].ToString();
        }
        else 
        {
            RIDUSER = "";        
        }
        ds = objDynamicDtls.ByProcedure("PIN_Generate", new string[] { "MEMBER_ID", "NO_OF_PINS", "AMOUNT", "REMARK", "PACKAGE", "PIN_TYPE", "PASSWORD", "IS_ADMIN", "FLAG", "CHECKTYPE", "ReqID" } , new string[] { txtMemID.Text, txtPins.Text, lblamount.Text, txtremark.Text, DDLPACKAGE.SelectedValue.ToString(), ddpaid.SelectedItem.Text, "", "GENERATED BY ADMIN", "PGNT", "", RIDUSER }, "BY DATASET");

        if (ds.Tables[0].Rows.Count > 0)
        {
            Label1.Text = objdb.UpdateMessage(ds.Tables[0].Rows[0][0].ToString());

            if (ds.Tables[0].Rows[0][0].ToString() == txtPins.Text + " E-PINS HAS BEEN  GENERATED SUCCESSFULLY")
            {
                this.SendSMS();
                FILLFILD("Load");
            }
           
        }
        else
        {
            Label1.Text = objdb.UpdateMessage(ds.Tables[0].Rows[0][0].ToString());
        }
        Clear();       
    } 
    protected void ddpaid_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddpaid.SelectedItem.Text != "--Select--")
        {
            FILLFILD("PakageDtl");
        }
    }
    public void Clear()
    {
        txtPins.Text = "0";
        txtMemID.Focus();
        ddpaid.SelectedIndex = -1;
        
        txtremark.Text = "";
        txtMemID.Text = "";
        lblamount.Text = "0";
        CalPinAmt();

        DDLPACKAGE.DataSource=string.Empty;
        DDLPACKAGE.DataBind();
        DDLPACKAGE.Items.Insert(0, "--Select Plan--");
        lblNameFill.Text = "";

    }
    private void SendSMS()
    {
        try
        {
            ds = objDynamicDtls.ByDataSet("select mobile,isnull(Mname,'')+' '+ isnull(MMidname,'') +' '+ isnull(MLastname,'') Mname from memdetail where memid='" + txtMemID.Text.Trim() + "'"); 
          
            mobno = ds.Tables[0].Rows[0]["mobile"].ToString();
            Mname = ds.Tables[0].Rows[0]["Mname"].ToString();

            MobiUSD = mobno;

            string Text = objDynamicDtls.GetCredentialAPIPinGenerate(Mname, txtMemID.Text.Trim(), Convert.ToInt16(txtPins.Text), "PinGenerate");
            try
            {
                new SendSms().SendSMSToUserMob(MobiUSD, Text);
            }
            catch { }
            
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            Label1.Text = "Your request could not be completed.";
        }
    }
    protected void txtPins_TextChanged(object sender, EventArgs e)
    {
        if (ddpaid.SelectedItem.Text != "--Select--")
        {
            FILLFILD("SelPkgDet");
            CalPinAmt();
        }
    }
    protected void DDLPACKAGE_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddpaid.SelectedItem.Text != "--Select--")
        {
            FILLFILD("SelPkgDet");
            CalPinAmt();
        }
    }
    public void CalPinAmt()
    {
        float qty = 0, amt = 0, totamt = 0;
        try
        { qty = float.Parse(txtPins.Text); }
        catch { }

        try
        { amt = float.Parse(PackageAmt); }
        catch { }

        try
        { totamt = amt * qty; }
        catch { }

        lblamount.Text = (totamt).ToString();
    }
    protected void txtMemID_TextChanged(object sender, EventArgs e)
    {
        try
        {
            ds = objDynamicDtls.ByProcedure("GetFullName", new string[] { "MemId" } , new string[] { txtMemID.Text.Trim() }, "BY DATASET");
            if (ds.Tables[0].Rows.Count > 0)
            {
                lblNameFill.Text = "";
                lblNameFill.Text = ds.Tables[0].Rows[0]["FullName"].ToString();
            }
            else
            {
                txtMemID.Text = "";
                lblNameFill.Text = "Username Does Not Exist.";
            }
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); Label1.Text = "Your request could not be completed."; }
        finally
        {
            if (ds != null) { ds.Dispose(); };
        }
    }

}
