using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;
using System.Drawing;
using System.IO;

public partial class Admin_UserSearch : System.Web.UI.Page
{
    SqlConnection cn = new SqlConnection(new DB().getconnection());
    DataTable dt; SqlDataAdapter sda; SqlCommand cmd;
    DataSet ds; string SqlFillStatus;
    string SearchText;
    public int PageNo;
    public int Pagesize = Convert.ToInt16(ConfigurationManager.AppSettings["gridPageSize"]);
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Request.Cookies["Get563lnr43lbt"] != null)
        {
            if (!Page.IsPostBack)
            {
                ddlJumpToPage.Items.Clear();
                int TotalRows = this.BindResult(1);
                this.populateList(TotalRows);
            }
        }
        else
        {
            Response.Redirect("../login.html");
        }

    }

    protected void btnSearch_Click(object sender, EventArgs e)
    {
        ddlJumpToPage.Items.Clear();
        int TotalRows = this.BindResult(1);
        this.populateList(TotalRows);
    }

    private int BindResult(int currentPage)
    {

        if (txtSearch.Text == "")
        {
            if (DDLFillItems.Items.Count != 0)
            {
                SearchText = DDLFillItems.SelectedItem.Text;
            }
            else
            {
                SearchText = "";
            }
        }
        else
        {
            SearchText = txtSearch.Text.Trim();
        }
        int TotalRows = 0;
        dt = new DataTable();
        sda = new SqlDataAdapter();
        cmd = new SqlCommand("dbo.CustomizeUserSearch");
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.Parameters.Add("@intTotalRecords", SqlDbType.Int).Direction = ParameterDirection.Output;
        cmd.Parameters.AddWithValue("@strSearchText", SearchText);
        cmd.Parameters.AddWithValue("@intPageSize", Convert.ToInt16(ConfigurationManager.AppSettings["gridPageSize"]));
        cmd.Parameters.AddWithValue("@intCurrentPage", currentPage);
        cmd.Parameters.AddWithValue("@SrchByDjGt", "Doj"); // DDLSrchByDjGt.SelectedItem.Text);
        cmd.Parameters.AddWithValue("@FrmDt", txtFromDate.Text.Trim());
        cmd.Parameters.AddWithValue("@ToDt", txtToDate.Text.Trim());
        cmd.Parameters.Add("@ColumnName", SqlDbType.VarChar).Value = DDLDownPos.SelectedItem.Value;
        cmd.Connection = cn;
        sda.SelectCommand = cmd;
        sda.Fill(dt);
        TotalRows = (int)cmd.Parameters["@intTotalRecords"].Value;
        grdUserDtl.PageIndex = currentPage - 1;
        grdUserDtl.DataSource = dt;
        grdUserDtl.DataBind();
        return TotalRows;
        sda.Dispose();
        cmd.Dispose();
        dt.Dispose();

    }
    private void populateList(int TotalRows)
    {
        lblTotRec.Text =  Convert.ToString(TotalRows);
        PageNo = Convert.ToInt32(Math.Floor(Convert.ToDouble((TotalRows / Pagesize))) + 1); ;
        for (int i = 1; i <= PageNo; i++)
        {
            ddlJumpToPage.Items.Add(new ListItem(i.ToString(), i.ToString()));
        }
    }

    protected void PageChanged(object sender, EventArgs e)
    {
        int Page = Convert.ToInt32(ddlJumpToPage.SelectedItem.Value);
        this.BindResult(PageNo);
    }
    protected void btnexporttoexport_Click(object sender, EventArgs e)
    {
        HtmlForm form = new HtmlForm();
        string attachment = "attachment; filename=SearchUserList.xls";
        Response.ClearContent();
        Response.AddHeader("content-disposition", attachment);
        Response.ContentType = "application/ms-excel";
        StringWriter stw = new StringWriter();
        HtmlTextWriter htextw = new HtmlTextWriter(stw);
        form.Controls.Add(grdUserDtl);
        this.Controls.Add(form);
        form.RenderControl(htextw);
        Response.Write(stw.ToString());
        Response.End();
        form.Dispose();
        stw.Dispose();
        htextw.Dispose();
    }
    protected void DDLDownPos_SelectedIndexChanged(object sender, EventArgs e)
    {
        txtSearch.Text = "";
        if (DDLDownPos.SelectedItem.Text == "Status" || DDLDownPos.SelectedItem.Text == "ROI Blocked" || DDLDownPos.SelectedItem.Text == "City" || DDLDownPos.SelectedItem.Text == "State" || DDLDownPos.SelectedItem.Text == "Package")
        {
            DDLFillItems.Visible = true;
            txtSearch.Visible = false;
            if (DDLDownPos.SelectedItem.Text.Trim().ToUpper() == "STATUS")
            {
                SqlFillStatus = "select distinct status from memdetail";
            }
            else if (DDLDownPos.SelectedItem.Text.Trim().ToUpper() == "CITY")
            {
                SqlFillStatus = "select distinct city from memdetail";
            }
            else if (DDLDownPos.SelectedItem.Text.Trim().ToUpper() == "STATE")
            {
                SqlFillStatus = "select distinct state from memdetail";
            }

            else if (DDLDownPos.SelectedItem.Text.Trim() == "ROI Blocked")
            {
                SqlFillStatus = "select  'NO'  union select 'YES' ";
            }

            else
            {
                SqlFillStatus = "select distinct package from memdetail";
            }
            ds = new DataSet();
            DDLFillItems.Items.Clear();

            foreach (DataRow dr in new DB().SelectRows(ds, SqlFillStatus).Tables[0].Rows)
            {
                DDLFillItems.Items.Add(dr[0].ToString());
            }

            ds.Dispose();
        }
        else
        {
            DDLFillItems.Visible = false;
            txtSearch.Visible = true;
        }
    }


    protected void grdUserDtl_SelectedIndexChanging(object sender, GridViewSelectEventArgs e)
    {
        Response.Cookies["Tap190Nvw92mst"].Value = DB.base64Encode(grdUserDtl.DataKeys[e.NewSelectedIndex].Value.ToString());
        Response.Cookies["Tap190Nvw92mst"].Expires = DateTime.Now.AddHours(2);

        Response.Cookies["ewallet"].Value = grdUserDtl.DataKeys[e.NewSelectedIndex].Value.ToString();
        Response.Cookies["ewallet"].Expires = DateTime.Now.AddHours(2);

        Response.Write("<script>");
        Response.Write("window.open('../ClientSection/DashboardHome.aspx','_blank')");
        Response.Write("</script>");
    }
    protected void LinkButton2_Click(object sender, EventArgs e)
    {
        HtmlForm form = new HtmlForm();
        string attachment = "attachment; filename=Downlinelist.xls";
        Response.ClearContent();
        Response.AddHeader("content-disposition", attachment);
        Response.ContentType = "application/ms-excel";
        StringWriter stw = new StringWriter();
        HtmlTextWriter htextw = new HtmlTextWriter(stw);
        form.Controls.Add(grdUserDtl);
        this.Controls.Add(form);
        form.RenderControl(htextw);
        Response.Write(stw.ToString());
        Response.End();
        form.Dispose();
        stw.Dispose();
        htextw.Dispose();
    }
}
