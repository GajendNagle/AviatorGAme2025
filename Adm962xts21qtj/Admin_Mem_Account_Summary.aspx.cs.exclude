using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;
using System.IO;

public partial class Adm962xts21qtj_Admin_Mem_Account_Summary : System.Web.UI.Page
{
    DataSet ds;
    public static string searchText;
    public int Pagesize;
    public int PageNo;
    public decimal totPrfsI, totLvlIn, totBrdInc, totRylty, totTltInc, totDepcrt, totDepamt, totWithd, totRegis, totFwall;
    DynamicDtls objgdb = new DynamicDtls();

    protected void Page_Load(object sender, EventArgs e)
    {
        Pagesize = Convert.ToInt32(ddlGrpageSz.SelectedValue.Trim());
        if (Request.Cookies["Get563lnr43lbt"] != null)
        {
            if (!IsPostBack)
            {
                if (Request.QueryString["MemId"] != null)
                {
                    txtSearch.Text = Request.QueryString["MemId"].ToString();
                }

                ddlJumpToPage.Items.Clear();
                int TotalRows = this.BindResult(1);
                this.populateList(TotalRows);
            }
        }
        else
        {
            Response.Redirect("../login.html");
        }
    }

    protected void btnSearch_Click(object sender, EventArgs e)
    {
        try
        {
            ddlJumpToPage.Items.Clear();
            int TotalRows = this.BindResult(1);
            this.populateList(TotalRows);
        }
        catch (Exception ex)
        {
        }
        finally
        {
        }
    }

    public DataSet METHOD(string VALUE, string PG_SIZE, string CURRENT_PG)
    {
        try
        {
            int TotalRecords = 0;
            ds = new DataSet();
            ds = objgdb.ByProcedure("[pro_AccountSummary_Users]", new string[] { "MemID", "PG_SIZE", "CURRENT_PG", "Flag", "intTotalRecords" }, new string[] { VALUE.Trim(), PG_SIZE, CURRENT_PG, "Admin", "" }, "ByDataset");
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = new DB().EmptyMessage("Sorry, Something is wrong please try later !"); }
        finally
        {
            ds.Dispose();
        }
        return ds;
    }
    private void populateList(int TotalRows)
    {
        lblTotRec.Text = Convert.ToString(TotalRows);
        PageNo = Convert.ToInt32(Math.Floor(Convert.ToDouble((TotalRows / Pagesize))) + 1);
        for (int i = 1; i <= PageNo; i++)
        {
            ddlJumpToPage.Items.Add(new ListItem(i.ToString(), i.ToString()));
        }
        CountingShow();
    }
    private int BindResult(int currentPage)
    {
        int TotalRows = 0;
        try
        {
            if (txtSearch.Text == "")
            {
                gvinvoiceno.DataSource = null;
                gvinvoiceno.DataBind();
                gvinvoiceno.Visible = false;
                lblMsg.Visible = true;
                lblMsg.Text = "Please Enter Member-ID First!!";
            }
            else
            {
                searchText = txtSearch.Text.Trim();
                ds = new DataSet();
                ds = METHOD(searchText.ToString(), Pagesize.ToString(), currentPage.ToString());

                TotalRows = Convert.ToInt32(ds.Tables[0].Rows.Count);
                if (TotalRows == 0)
                {
                    lblMsg.Visible = true;
                    gvinvoiceno.Visible = false;
                    lblMsg.Text = new DB().EmptyMessage(ds.Tables[0].Rows[0]["MSG"].ToString());
                }
                else
                {
                    lblMsg.Visible = true;
                    lblMsg.Text = "Member-ID : " + txtSearch.Text;
                    //txtSearch.Text = "";
                    gvinvoiceno.Visible = true;
                    gvinvoiceno.DataSource = ds.Tables[0];
                    gvinvoiceno.DataBind();
                }
                return TotalRows;
            }
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = "Sorry, Something is wrong please try later !"; }
        return TotalRows;
    }
    public void CountingShow()
    {
        if (ddlJumpToPage.SelectedItem.Text == "1")
        {
            PageNo = 1;
            //Pagesize
            lblRecordNo.Text = PageNo.ToString() + " - " + Pagesize.ToString() + " of "; ;
        }
        else
        {
            //PageNo = 1 + int.Parse(ddlJumpToPage.SelectedItem.Text);
            PageNo = int.Parse(ddlJumpToPage.SelectedItem.Text);
            //Pagesize = (Pagesize * int.Parse(ddlJumpToPage.SelectedItem.Text)); @PG_SIZE*(@CURRENT_PG-1)
            lblRecordNo.Text = ((Pagesize * (PageNo - 1)) + 1) + " - " + (Pagesize * PageNo) + " of ";
        }
        if (Convert.ToInt32(lblTotRec.Text.ToString().Trim()) == 0)
        {
            lblRecordNo.Text = "";
        }
        if (Convert.ToInt32(lblTotRec.Text.ToString().Trim()) > 0)
        {
            if (Convert.ToInt32(lblTotRec.Text.ToString().Trim()) < (Pagesize * PageNo))
            {
                lblRecordNo.Text = ((Pagesize * (PageNo - 1)) + 1) + " - " + Convert.ToInt32(lblTotRec.Text.ToString().Trim()) + " of ";
            }
        }
    }
    protected void PageChanged(object sender, EventArgs e)
    {
        int Page = Convert.ToInt32(ddlJumpToPage.SelectedItem.Value);
        this.BindResult(Page);
        CountingShow();
    }
    protected void PageChangedPz(object sender, EventArgs e)
    {
        Pagesize = Convert.ToInt32(ddlGrpageSz.SelectedValue.Trim());
        this.BindResult(1);
        CountingShow();
    }
    protected void btnexporttoexport_Click(object sender, EventArgs e)
    {
        //Response.ClearContent();
        Response.Buffer = true;
        Response.AddHeader("content-disposition", string.Format("attachment; filename={0}", "Member-Account-Summary.xls"));
        Response.ContentType = "application/ms-excel";
        StringWriter sw = new StringWriter();
        HtmlTextWriter htw = new HtmlTextWriter(sw);
        gvinvoiceno.AllowPaging = false;

        //ddlJumpToPage.Items.Clear();
        //int TotalRows = this.BindResult(1);
        //this.populateList(TotalRows);

        //Change the Header Row back to white color
        //gvinvoiceno.HeaderRow.Style.Add("background-color", "#FFFFFF");
        //Applying stlye to gridview header cells
        //for (int i = 0; i < gvinvoiceno.HeaderRow.Cells.Count; i++)
        //{
        //    gvinvoiceno.HeaderRow.Cells[i].Style.Add("background-color", "#df5015");
        //}
        gvinvoiceno.RenderControl(htw);
        Response.Write(sw.ToString());
        Response.End();
    }
    public override void VerifyRenderingInServerForm(Control control)
    {
        /* Verifies that the control is rendered */
    }
    protected void chkHeader_CheckedChanged(object sender, EventArgs e)
    {
        CheckBox chkbox = (CheckBox)gvinvoiceno.HeaderRow.FindControl("chkHeader");

        foreach (GridViewRow dr in gvinvoiceno.Rows)
        {
            CheckBox chkselect = (CheckBox)dr.FindControl("chkSelect");
            if (chkbox.Checked == true)
            {
                chkselect.Checked = true; idChangeSts.Visible = true;
            }
            else
            {
                chkselect.Checked = false; idChangeSts.Visible = false;

            }
        }
    }
    protected void gvinvoiceno_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            //totBrdInc += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Level_Commission"));
            totLvlIn += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Level_Rewards"));
            totPrfsI += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Private_Sale_Bonus"));
            totRylty += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Purchase_Token"));
            //totFwall += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Royalty"));
            totTltInc += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Total_Income"));
            totDepcrt += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Deposits_Cnts"));
            totDepamt += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Deposit"));
            totWithd += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Withdraw"));
            totRegis += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Registrations"));
        }

        else if (e.Row.RowType == DataControlRowType.Footer)
        {
            e.Row.Cells[1].Text = "Total";
            e.Row.Cells[1].Font.Bold = true;

            //e.Row.Cells[2].Text = totBrdInc.ToString();
            //e.Row.Cells[2].Font.Bold = true;

            e.Row.Cells[2].Text = totLvlIn.ToString();
            e.Row.Cells[2].Font.Bold = true;

            e.Row.Cells[3].Text = totPrfsI.ToString();
            e.Row.Cells[3].Font.Bold = true;

            e.Row.Cells[4].Text = totRylty.ToString();
            e.Row.Cells[4].Font.Bold = true;

            //e.Row.Cells[5].Text = totFwall.ToString();
            //e.Row.Cells[5].Font.Bold = true;

            e.Row.Cells[5].Text = totTltInc.ToString();
            e.Row.Cells[5].Font.Bold = true;

            e.Row.Cells[6].Text = totDepcrt.ToString();
            e.Row.Cells[6].Font.Bold = true;

            e.Row.Cells[7].Text = totDepamt.ToString();
            e.Row.Cells[7].Font.Bold = true;

            e.Row.Cells[8].Text = totWithd.ToString();
            e.Row.Cells[8].Font.Bold = true;

            e.Row.Cells[9].Text = totRegis.ToString();
            e.Row.Cells[9].Font.Bold = true;

          
        }
    }
}