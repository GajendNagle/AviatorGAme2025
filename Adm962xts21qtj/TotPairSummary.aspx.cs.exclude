using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;
using System.IO;


public partial class Admin_TotPairSummary : System.Web.UI.Page
{
    SqlConnection cn = new SqlConnection(new DB().getconnection());
    SqlCommand cmd;
    Int32 CPTotalTPairs = 0; Int32 CPTotalTamt = 0;
    Int32 CPTotalspill = 0; Int32 CPTotalPrevAdj = 0; Int32 VTpairs = 0;
    Int32 CPTotalWatchAdsAmt = 0; Int32 PLPair;
    Int32 VLeftCnt = 0; Int32 VRIghtCnt = 0; Int32 VPair = 0; Int32 VLPair = 0;
    DataSet ds;
    DynamicDtls objDynamicDtls = new DynamicDtls();

    DataTable dt; SqlDataAdapter sda;
    public int PageNo; public string lblTotRec="0";
    public int Pagesize = Convert.ToInt16(ConfigurationManager.AppSettings["gridPageSize"]);

    protected void Page_Load(object sender, EventArgs e)
    {

        if (Request.Cookies["Get563lnr43lbt"] != null)
        {
            if (!IsPostBack) ;
        }
        else
        {
            Response.Redirect("../login.html", false);
        }

    }
    protected void btnSearch_Click(object sender, EventArgs e)
    {
        try
        {
            ddlJumpToPage.Items.Clear();
            int TotalRows = this.BindResult(1);
            this.populateList(TotalRows);
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = "Your request could not be completed."; }
        //if (txtSearch.Text.Trim() != "")
        //{
        //    GetNetworkSummaryByDate();
        //}
    }

    private int BindResult(int currentPage)
    {
        int TotalRows = 0;
        dt = new DataTable();
        sda = new SqlDataAdapter();
        cmd = new SqlCommand("dbo.Proc_TotMemPairCnt");
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.Parameters.Add("@intTotalRecords", SqlDbType.Int).Direction = ParameterDirection.Output;

        cmd.Parameters.AddWithValue("@intPageSize", Convert.ToInt16(ConfigurationManager.AppSettings["gridPageSize"]));
        cmd.Parameters.AddWithValue("@intCurrentPage", currentPage);
       

        cmd.Parameters.AddWithValue("@SearchType", ddlSearchBy.SelectedItem.Value);

        if (pnlPairs.Visible)
        {

            cmd.Parameters.AddWithValue("@FrmPair", txtPairFrom.Text.Trim());
            cmd.Parameters.AddWithValue("@ToPair", txtPairTo.Text.Trim());
            cmd.Parameters.AddWithValue("@strSearchText", "");
           
        }
        else
        {
            cmd.Parameters.AddWithValue("@FrmPair", "");
            cmd.Parameters.AddWithValue("@ToPair", "");

            string MemidbyAcId = txtSearch.Text.Trim();
            if (txtSearch.Text.Trim() == "")
            {
                cmd.Parameters.AddWithValue("@strSearchText","");
            }
            else
            {
                cmd.Parameters.AddWithValue("@strSearchText", MemidbyAcId);
            }
           
        }
        cmd.Connection = cn;
        sda.SelectCommand = cmd;
        sda.Fill(dt);
        TotalRows = (int)cmd.Parameters["@intTotalRecords"].Value;
        if (TotalRows != 0)
        {
            Label1.Visible = false;
            grdUserDtl.Visible = true;
            grdUserDtl.PageIndex = currentPage - 1;
            grdUserDtl.DataSource = dt;
            grdUserDtl.DataBind();
        }
        else
        {
            Label1.Visible = true;
            grdUserDtl.Visible = false;
            Label1.Text = objDynamicDtls.EmptyMessage("Sorry, Record Not found.");
        }
        if (dt.Rows.Count == 0)
        {
            Panel1.Visible = false;
        }
        else
        {
            Panel1.Visible = true;
        }
        return TotalRows;

        sda.Dispose();
        cmd.Dispose();
        dt.Dispose();

    }
    private void populateList(int TotalRows)
    {
        lblTotRec = Convert.ToString(TotalRows);
        int PageCount = Convert.ToInt32(Math.Floor(Convert.ToDouble((TotalRows / Convert.ToInt32(ConfigurationManager.AppSettings["gridPageSize"])))) + 1); ;
        for (int i = 1; i <= PageCount; i++)
        {
            ddlJumpToPage.Items.Add(new ListItem(i.ToString(), i.ToString()));
        }
        CountingShow();
    }

    public void CountingShow()
    {
        if (ddlJumpToPage.SelectedItem.Text == "1")
        {
            PageNo = 1;
            //Pagesize
        }
        else
        {
            PageNo = 1 + int.Parse(ddlJumpToPage.SelectedItem.Text);
            Pagesize = (Pagesize * int.Parse(ddlJumpToPage.SelectedItem.Text));
        }
    }
    protected void PageChanged(object sender, EventArgs e)
    {
        int Page = Convert.ToInt32(ddlJumpToPage.SelectedItem.Value);
        this.BindResult(Page);
        CountingShow();
    }

    protected void btnexporttoexport_Click(object sender, EventArgs e)
    {
        Response.ClearContent();
        Response.Buffer = true;
        Response.AddHeader("content-disposition", string.Format("attachment; filename={0}", "Report.xls"));
        Response.ContentType = "application/ms-excel";
        StringWriter sw = new StringWriter();
        HtmlTextWriter htw = new HtmlTextWriter(sw);
        grdUserDtl.AllowPaging = false;

        ddlJumpToPage.Items.Clear();
        int TotalRows = this.BindResult(1);
        this.populateList(TotalRows);

        grdUserDtl.RenderControl(htw);
        Response.Write(sw.ToString());
        Response.End();
    }
    public override void VerifyRenderingInServerForm(Control control)
    {
        /* Verifies that the control is rendered */
    }


   
    protected void grdUserDtl_RowDataBound(object sender, GridViewRowEventArgs e)
    {

        if (e.Row.RowType == DataControlRowType.DataRow)
        {

            VLeftCnt += Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "LeftUserCnt"));
            VRIghtCnt += Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "RightUserCnt"));
            VPair += Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "Pair"));
            VLPair += Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "LapsePair"));
            VTpairs += Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "TotPairs"));
           


        }
        else if (e.Row.RowType == DataControlRowType.Footer)
        {
            e.Row.Cells[2].Text = "TOTALS:";
            // for the Footer, display the running totals
            e.Row.Cells[4].Text = VLeftCnt.ToString("d");
            e.Row.Cells[5].Text = VRIghtCnt.ToString("d");
            e.Row.Cells[6].Text = VPair.ToString("d");
            e.Row.Cells[7].Text = VLPair.ToString("d");
            e.Row.Cells[8].Text = VTpairs.ToString("d");
            e.Row.Cells[2].HorizontalAlign = e.Row.Cells[3].HorizontalAlign = e.Row.Cells[4].HorizontalAlign = e.Row.Cells[5].HorizontalAlign = e.Row.Cells[6].HorizontalAlign = e.Row.Cells[7].HorizontalAlign = e.Row.Cells[8].HorizontalAlign = HorizontalAlign.Center;
            e.Row.Font.Bold = true;
        }
    }

    protected void ddlSearchBy_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlSearchBy.SelectedItem.Text == "MemId")
        {
            txtSearch.Visible = true;
            pnlPairs.Visible = false;

        }
        else
        {
            txtSearch.Visible = false;
            pnlPairs.Visible = true;

        }
    }
    protected void txtSearch_TextChanged(object sender, EventArgs e)
    {
        try
        {
            ds = objDynamicDtls.ByProcedure("GetFullName", new string[] { "MemId" } , new string[] { txtSearch.Text.Trim() }, "BY DATASET");
            if (ds.Tables[0].Rows.Count > 0)
            {
                lblMsg.Text = "";
                //lblMsg.Text = ds.Tables[0].Rows[0]["FullName"].ToString();
            }
            else
            {
                txtSearch.Text = "";
                lblMsg.Text = "Member ID Does Not Exist.";
            }
        }
        catch (Exception ex) { DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace); lblMsg.Text = "Your request could not be completed."; }
        finally
        {
            if (ds != null) { ds.Dispose(); };
        }
    }
}