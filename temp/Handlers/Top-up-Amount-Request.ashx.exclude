<%@ WebHandler Language="C#" Class="Top_up_Amount_Request" %>
using System;
using System.Collections.Generic;
using System.Text;
using System.Web;
using System.Web.Script.Serialization;
using System.Net.Mail;
using System.IO;
using System.Data;
using System.Web.SessionState;
public class Top_up_Amount_Request : IHttpHandler {
    public HttpContext context;
    public HttpRequest request;
    public HttpResponse response;
    public bool sc;
    public static string msg, Msgs, dtl, RtnRlt, strJson, UserID, ddlInvOn, txtInvQty, txtMemId,
        txtTransPWD, txtTopUpAmount, InvWallet;
    DynamicDtls objgdb = new DynamicDtls();
    DataSet ds; DataTable dt;
    public class test
    {
        public bool Success { get;set;}
        public string Message { get;set;}
        public string detail { get;set;}
        public string aid { get; set; }
        public test(bool sc, string msg, string dtl)
        {
            Success = sc;
            Message = msg;
            detail = dtl;
        }
    }

    public void handleRequest()
    {
        writeJson(new test(sc, msg, dtl));
    }

    public void ProcessRequest(HttpContext _context)
    {
        context = _context;
        request = _context.Request;
        response = _context.Response;
        context.Response.ContentType = "application/json";
        /////////
        if (context.Request.Cookies["Tap190Nvw92mst"] != null)
        {
            UserID = DB.base64Decod(context.Request.Cookies["Tap190Nvw92mst"].Value).ToString();
            if (context.Request.QueryString["TDs"] != null)
            {
                GetTopupDescription();
            }
         
            else
            {
                ddlInvOn = context.Request["ddlInvOn"].Trim();
                txtInvQty = context.Request["txtInvQty"].Trim();
                txtMemId = context.Request["txtMemId"].Trim();
                txtTransPWD = context.Request["txtTransPWD"].Trim();
                txtTopUpAmount = context.Request["txtTopUpAmount"].Trim();
                InvWallet = context.Request["InvWallet"].Trim();
                /////////
                GiveHelpOrder();
                ////////
                handleRequest();
            }
        }
        else
        {
            context.Response.Write("<script>window.open('../login.html','_top');</script>");
        }
    }
    public void writeJson(object _object)
    {
        JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer();
        string jsondata = javaScriptSerializer.Serialize(_object);
        writeRaw(jsondata);
    }

    public void writeRaw(string text)
    {
        context.Response.Write(text);
    }
   
    public void GiveHelpOrder()
    {
        try
        {
            if (ddlInvOn != "" && txtInvQty != "" && txtMemId != "" && txtTransPWD != "" && InvWallet != "")
            {
                ds = objgdb.ByProcedure("[ProcStockiestRequest]", new string[] {"TransID", "WtihdType","StockiestID", "Memid", "PAYMENT_MODE", "PAY_MODE_NO", "TRANS_ID", "DEPOSITE_DATE",
                                                                         "BNK_NAME","BRANCH","CITY","STATE","AMT","FLAG","ATTACHMENT","AccNoMemb" } ,
                          new string[] {txtTransactionID.Text, WithType,txtStockiestID.Text, UserID, RadioButtonList1.SelectedItem.Text, txtPayModeNo.Text, txtTransactionID.Text,txtDipDt.Text, 
                                        txtBankName.Text,txtBranch.Text, txtCity.Text, "", txtAmount.Text, "", "",txtAccountNo.Text }, "BY DATASET");
                if (ds.Tables[1].Rows[0]["SubmitStatus"].ToString() == "Ok")
                {
                    if (ds.Tables[0].Rows[0]["SubmitStatus"].ToString() == "Ok")
                    {
                        sc = true;
                        msg = "<span style='color:#2E962E;'> " + ds.Tables[0].Rows[0]["Error"].ToString() + "</span>";
                    }
                    else
                    {
                        sc = false;
                        msg = "<span style='color:#FF8A00;'> " + ds.Tables[0].Rows[0]["Error"].ToString() + "</span>";
                    }
                }
                else
                {
                    sc = false;
                    msg = "<span style='color:#FF8A00;'> " + ds.Tables[1].Rows[0]["Error"].ToString() + "</span>";
                }
            }
            else
            {
                sc = false;
                msg = "<span style='color:#FF8A00;'>Please fill required fields in investment form !</span>";
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            sc = false;
            msg = ex.Message;
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    public void GetTopupAmount()
    {
        try
        {
            if (ddlInvOn != "" && txtInvQty != "")
            {
                ds = objgdb.ByProcedure("GetInvAmt", new string[] { "InvOn", "InvQty" }, new string[] { ddlInvOn.ToString().Trim(), txtInvQty.ToString().Trim() }, "dsd");
                if (ds.Tables[0].Rows[0]["Msg"].ToString() == "Ok")
                {
                    sc = true;
                    msg = ds.Tables[0].Rows[0]["Amt"].ToString();

                }
                else
                {
                    sc = false;
                    msg = "<span style='color:#FF8A00;'>" + ds.Tables[0].Rows[0]["Msg"].ToString() + "</span>";
                }
            }
            else
            {
                sc = false;
                msg = "<span style='color:#FF8A00;'>Please select investment plan !</span>";
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            sc = false;
            msg = ex.Message;
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    public void GetTopupDescription()
    {
        try
        {
            ds = objgdb.ByProcedure("ProcWithdrawalDesc", new string[] { "Memid" }, new string[] { UserID }, "BYdataset");
            if (ds.Tables[0].Rows.Count > 0)
            {
                dt = ds.Tables[0];
                if (dt.Rows.Count > 0)
                {
                    StringBuilder jsonBuilder = new StringBuilder("");
                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        jsonBuilder.Append("<p> <i class='fa fa-cog'></i> " + dt.Rows[i]["WithDesc"].ToString() + "</p>");
                    }
                    jsonBuilder.Append(" <p> <i class='fa fa-cog'></i> Your top-up wallet balance : <span style='font-size:20px; color:#494242;font-weight:bold'>Rs." + ds.Tables[0].Rows[0]["WallBal"].ToString() + "</p>");
                    response.Write(jsonBuilder);
                }
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            response.Write(ex.Message);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); dt.Dispose(); }
        }
    }
    public bool IsReusable
    {
        get
        {
            return false;
        }
    }


}