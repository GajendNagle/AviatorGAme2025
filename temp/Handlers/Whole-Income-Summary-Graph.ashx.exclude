<%@ WebHandler Language="C#" Class="Whole_Income_Summary_Graph" %>

using System;
using System.Collections.Generic;
using System.Text;
using System.Web;
using System.Web.Script.Serialization;
using System.IO;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;


public class Whole_Income_Summary_Graph : IHttpHandler {
    public HttpContext context; public HttpRequest request; public HttpResponse response;
    public bool sc;
    public static string msg, dtl, strJson, UserID, Psize = "20",
    SrchTxt = "ALL";
    public static int Pno = 1, Dwn = 0;
    DynamicDtls objgdb = new DynamicDtls(); DataSet ds; DataTable dt;
    public void ProcessRequest(HttpContext _context)
    {
        context = _context;
        request = _context.Request;
        response = _context.Response;
        context.Response.ContentType = "application/json";
        //////
        if (context.Request.Cookies["Tap190Nvw92mst"] != null)
        {
            if (context.Request["search[value]"] != null && context.Request["search[value]"] != "")
            {
                SrchTxt = context.Request["search[value]"].ToString();
            }
            else
            {
                SrchTxt = "ALL";
            }
            if (context.Request["start"] != null)
            {
                Pno = Convert.ToInt32(Math.Floor(Convert.ToDouble((
                    Convert.ToInt32(context.Request["start"].ToString()) / Convert.ToInt32(context.Request["length"].ToString())))) + 1);
                //Pno = Convert.ToInt32((context.Request["start"].ToString() / context.Request["length"].ToString())+1);
                Psize = context.Request["length"].ToString();
            }
            ////////
            UserID = DB.base64Decod(context.Request.Cookies["Tap190Nvw92mst"].Value).ToString();
            /////////
            Dwn = Dwn + 1;
            //ddlJumpToPage.Items.Clear();
            int TotalRows = this.BindResult(Pno);
            //this.populateList(TotalRows);
        }
        else
        {
            context.Response.Write("<script>window.open('login.html','_top');</script>");
        }
        /////////
        //handleRequest();
    }
    private int BindResult(int currentPage)
    {
        int TotalRows = 0;
        try
        {
            ds = objgdb.ByProcedure("dbo.Whole_Income_Summary_Graph", new string[] { "MemId", "Type" },
                new string[] { UserID.ToString().Trim(), "GRAPH" }, "ByDataset");
            /////
            TotalRows = Convert.ToInt32(ds.Tables[0].Rows.Count.ToString());
            /////
            if (TotalRows > 0)
            {
                dt = ds.Tables[0];
                int count = TotalRows;
                string strJson = Dataset2Json(ds, count);
                context.Response.Write(strJson);
                context.Response.End();
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            //Msg = objgdb.ErrorMsg("Records not available !");
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }

        return TotalRows;
    }
    public static string DataTable2Json(DataTable dt)
    {
        StringBuilder jsonBuilder = new StringBuilder();

        for (int i = 0; i < dt.Rows.Count; i++)
        {

            for (int j = 0; j < dt.Columns.Count; j++)
            {
                jsonBuilder.Append("'" + dt.Columns[j].ColumnName + "'");
                jsonBuilder.Append(",");
                jsonBuilder.Append(dt.Rows[i][j].ToString());
                jsonBuilder.Append("|");
            }
            //if (dt.Columns.Count > 0)
            //{
            //    jsonBuilder.Remove(jsonBuilder.Length - 1, 1);
            //}

        }
        if (dt.Rows.Count > 0)
        {
            jsonBuilder.Remove(jsonBuilder.Length - 1, 1);
        }

        return jsonBuilder.ToString();
    }
    public static string Dataset2Json(DataSet ds, int total)
    {
        StringBuilder json = new StringBuilder();

        foreach (DataTable dt in ds.Tables)
        {           
            
            json.Append(DataTable2Json(dt));
           
        }
        return json.ToString();
    }

    public bool IsReusable
    {
        get
        {
            return false;
        }
    }

}