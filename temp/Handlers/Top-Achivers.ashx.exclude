<%@ WebHandler Language="C#" Class="Top_Achivers" %>
using System;
using System.Collections.Generic;
using System.Text;
using System.Web;
using System.Web.Script.Serialization;
using System.IO;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public class Top_Achivers : IHttpHandler {
    public HttpContext context; public HttpRequest request; public HttpResponse response;
    public bool sc;
    public static string msg, dtl, strJson, UserID, Role, Filter, SrchTxt, Psize = "20",
    FrmDt = "", ToDt = "", DownPos, SrchByDjGt, IncType = "ALL";
    public static int Pno = 1, Dwn = 0;
    DynamicDtls objgdb = new DynamicDtls(); DataSet ds; DataTable dt;
    public void ProcessRequest(HttpContext _context)
    {
        context = _context;
        request = _context.Request;
        response = _context.Response;
        context.Response.ContentType = "application/json";

        //if (context.Request.Cookies["Tap190Nvw92mst"] != null)
        //{

            if (context.Request.QueryString["Ach"] != null)
            {
                Filter = context.Request.QueryString["Ach"].ToString();
        //        Psize = context.Request.QueryString["s"].ToString();
            }
        //    ////////
        //    if (context.Request.QueryString["u"] == "undefined" || context.Request.QueryString["u"] == null)
        //    {
        //        SrchTxt = "ALL";
        //    }
        //    else
        //    {
        //        SrchTxt = context.Request.QueryString["u"].ToString();
        //    }


        //    ////////
        //    UserID = DB.base64Decod(context.Request.Cookies["Tap190Nvw92mst"].Value).ToString();
        //    /////////
        //    Dwn = Dwn + 1;
        //    int TotalRows = this.BindResult(Pno);


        //}
        //else
        //{
        //    context.Response.Write("<script>window.open('../login.html','_top');</script>");
        //}
        /////////
        //handleRequest();
        //this.BindResult();
            if (Filter.Trim() == "2")
            {
                Achivers();
            }
            if (Filter.Trim() == "1")
            {
                AchiversIndex();
            }
            
    }

    private void AchiversIndex()
    {
        try
        {

            ds = objgdb.ByProcedure("dbo.Top10AChivers", new string[] {  }, new string[] {  }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {
                StringBuilder jsonBuilder = new StringBuilder("");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    dt = ds.Tables[0];
                    if (dt.Rows.Count > 0)
                    {
                        //jsonBuilder.Append("<ul class='imp-messages'>");
                        jsonBuilder.Append("<div class='carousel-inner'>");
                        jsonBuilder.Append("<div class='item active'>");
                        jsonBuilder.Append("<div class='row'>");
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {

                            jsonBuilder.Append("<div class='sss'>");
                            jsonBuilder.Append("<div class='col-sm-3 col-xs-6'>");
                            jsonBuilder.Append("<a href='#x' style='border: 3px solid #a9b8c1;'>");
                            jsonBuilder.Append("<img src='" + ds.Tables[0].Rows[i]["MemPic"].ToString() + "' alt='Image' class='img-responsive Image'></a>");
                            jsonBuilder.Append("<div class='overlay' style='margin-top: 10px;'>");
                            jsonBuilder.Append("<h4 class='text'>"+ds.Tables[0].Rows[i]["MName"].ToString().ToUpper()+"</h4>");
                            jsonBuilder.Append("</div></div></div>");
                                                     
                            if (i==3 || i==7)
                            {
                                jsonBuilder.Append("</div>");
                                jsonBuilder.Append("</div>");
                                jsonBuilder.Append("<div class='item'>");
                                jsonBuilder.Append("<div class='row'>");
                            }
                            
                            
                            //jsonBuilder.Append("<div class='ss'>");
                            //jsonBuilder.Append("<div class='col-sm-4'>");
                            //jsonBuilder.Append("<div class='team-members animated bounceInRight'style='animation-duration: 6s;'>");
                            //jsonBuilder.Append("<div class='team-avatar'>");
                            //jsonBuilder.Append("<img class='img-responsive image' style='height: 361px;' src='" + ds.Tables[0].Rows[i]["MemPic"].ToString() + "' alt=''>");
                            //jsonBuilder.Append("</div>");
                            //jsonBuilder.Append("<div class='overlay'>");
                            //jsonBuilder.Append("<div class='team-desc'>");
                            //jsonBuilder.Append("<h4 class='text' style='margin-top: -151px;'>" + ds.Tables[0].Rows[i]["MName"].ToString().ToUpper() + "</h4>");
     
                            //jsonBuilder.Append("</div></div></div>");
                            //jsonBuilder.Append("</div>");
                            //jsonBuilder.Append("</div>");
                                                        

                        }
                        jsonBuilder.Append("</div></div></div>");
                        jsonBuilder.Append("<a class='left carousel-control' href='#myCarousel' data-slide='prev'><i class='fa fa-arrow-left fa-4' style='MARGIN-TOP: 296PX; color: black;'></i></a>");
                        jsonBuilder.Append("<a class='right carousel-control' href='#myCarousel' data-slide='next'><i class='fa fa-arrow-right fa-4' style='MARGIN-TOP: 296PX;color: black;'></i></a>");
                        
                    }
                }
                response.Write(jsonBuilder);
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    private void Achivers()
    {
        try
        {

            ds = objgdb.ByProcedure("dbo.Top10AChivers", new string[] { }, new string[] { }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {
                StringBuilder jsonBuilder = new StringBuilder("");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    dt = ds.Tables[0];
                    if (dt.Rows.Count > 0)
                    {
                        //jsonBuilder.Append("<ul class='imp-messages'>");
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {


                            jsonBuilder.Append("<div class='ss'>");
                            jsonBuilder.Append("<div class='col-sm-4'>");
                            jsonBuilder.Append("<div class='team-members animated bounceInRight'style='animation-duration: 6s;'>");
                            jsonBuilder.Append("<div class='team-avatar'>");
                            jsonBuilder.Append("<img class='img-responsive image' style='height: 361px;' src='" + ds.Tables[0].Rows[i]["MemPic"].ToString() + "' alt=''>");
                            jsonBuilder.Append("</div>");
                            jsonBuilder.Append("<div class='overlay'>");
                            jsonBuilder.Append("<div class='team-desc'>");
                            jsonBuilder.Append("<h4 class='text' style='margin-top: -151px;'>" + ds.Tables[0].Rows[i]["MName"].ToString().ToUpper() + "</h4>");
                            jsonBuilder.Append("</br><h4 class='text' style='margin-top: -111px;'>Bonus- " + ds.Tables[0].Rows[i]["TotBns"].ToString().ToUpper() + "</h4>");
                            jsonBuilder.Append("</div></div></div>");
                            jsonBuilder.Append("</div>");
                            jsonBuilder.Append("</div>");


                        }

                    }
                }
                response.Write(jsonBuilder);
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }  
    
    
    
    
    
    
    
    private int BindResult()
    {
        int TotalRows = 0;
        try
        {
            ds = objgdb.ByProcedure("dbo.Top10AChivers", new string[] {  },
                new string[] {  }, "ByDataset");
            //if (TotalRows > 0)
            //{
            dt = ds.Tables[0];
            int count = TotalRows;
            string strJson = Dataset2Json(ds, count);
            context.Response.Write(strJson);
            context.Response.End();
            //}
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            //Msg = objgdb.ErrorMsg("Records not available !");
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }

        return TotalRows;
    }

    public static string DataTable2Json(DataTable dt)
    {
        StringBuilder jsonBuilder = new StringBuilder();

        for (int i = 0; i < dt.Rows.Count; i++)
        {
            jsonBuilder.Append("{");
            for (int j = 0; j < dt.Columns.Count; j++)
            {
                jsonBuilder.Append("\"");
                jsonBuilder.Append(dt.Columns[j].ColumnName);
                jsonBuilder.Append("\":\"");
                jsonBuilder.Append(dt.Rows[i][j].ToString());
                jsonBuilder.Append("\",");
            }
            if (dt.Columns.Count > 0)
            {
                jsonBuilder.Remove(jsonBuilder.Length - 1, 1);
            }
            jsonBuilder.Append("},");
        }
        if (dt.Rows.Count > 0)
        {
            jsonBuilder.Remove(jsonBuilder.Length - 1, 1);
        }

        return jsonBuilder.ToString();
    }
    public static string Dataset2Json(DataSet ds, int total)
    {
        StringBuilder json = new StringBuilder();

        foreach (DataTable dt in ds.Tables)
        {
            json.Append("[");
            json.Append(DataTable2Json(dt));
            json.Append("]");
        }
        return json.ToString();
    }

   

    public bool IsReusable
    {
        get
        {
            return false;
        }
    }

}