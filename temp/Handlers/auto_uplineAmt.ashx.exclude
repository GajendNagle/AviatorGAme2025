<%@ WebHandler Language="C#" Class="auto_uplineAmt" %>

using System;
using System.Collections.Generic;
using System.Text;
using System.Web;
using System.Web.Script.Serialization;
using System.IO;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public class auto_uplineAmt : IHttpHandler
{

    public HttpContext context;
    public HttpRequest request;
    public HttpResponse response;
    public bool sc;
    public static string msg, Msgs, dtl, RtnRlt, strJson;
    string txtWalletAdd = "", txtWalletAmt = "", TxnType = "", AcType = "", TxnHash = "", ContAdd = "", totRefs = "", address = "";
    DynamicDtls objgdb = new DynamicDtls();
    DataSet ds;
    public class test
    {
        public bool Success { get; set; }
        public string Message { get; set; }
        public string detail { get; set; }
        public string aid { get; set; }
        public test(bool sc, string msg, string dtl)
        {
            Success = sc;
            Message = msg;
            detail = dtl;
        }
    }

    public void handleRequest()
    {
        writeJson(new test(sc, msg, dtl));
    }

    public void ProcessRequest(HttpContext _context)
    {
        context = _context;
        request = _context.Request;
        response = _context.Response;
        context.Response.ContentType = "application/json";
        /////////          context.Response.Cookies["Tap190Nvw92mst"].Expires = DateTime.Now.AddDays(-1);
        if (context.Request.Cookies["Tap190Nvw92mst"] != null)
        {
            TxnHash = context.Request["upline"].Trim();// context.Request.QueryString["upline"].Trim();
            AcType = "GETTxnHash";
            txtWalletAmt = context.Request["Amount"].Trim();// context.Request.QueryString["Amount"].Trim();
            address = context.Request["address"].Trim();
            /* txtWalletAdd = context.Request["Tap190Nvw92mst"].Trim();*/// context.Request.Cookies["Tap190Nvw92mst"].Value;// context.Request.QueryString["address"].Trim();
            txtWalletAdd = DB.base64Decod(context.Request.Cookies["Tap190Nvw92mst"].Value).ToString();
            ContAdd = context.Request["TrxID"].Trim();// context.Request.QueryString["TrxID"].Trim();
            totRefs = context.Request["tRef"].Trim();// context.Request.QueryString["tRef"].Trim();
                                                     /////////
            GiveHelpOrder();
            ////////
            handleRequest();
        }
    }
    public void writeJson(object _object)
    {
        JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer();
        string jsondata = javaScriptSerializer.Serialize(_object);
        writeRaw(jsondata);
    }
    public void writeRaw(string text)
    {
        context.Response.Write(text);
    }

    public void GiveHelpOrder()
    {
        try
        {
            if (txtWalletAdd != "" && txtWalletAmt != "")
            {
                ds = objgdb.ByProcedure("Pro_TRX_PaymentAdds", new string[] { "WalletAdd", "Amt", "TxnType", "TxnHas", "DltID", "totRefs", "TxnID" }
                            , new string[] { txtWalletAdd.Trim(), txtWalletAmt.Trim(), AcType, TxnHash, address, totRefs, ContAdd }, "das");
                if (ds.Tables[0].Rows[0]["SubmitStatus"].ToString() == "Ok")
                {
                    sc = true;
                    msg = ds.Tables[0].Rows[0]["Error"].ToString();
                    //context.Response.Cookies["Tap190Nvw92mst"].Expires = DateTime.Now.AddDays(-1);
                    //
                    //context.Response.Cookies["PjkMN8thuRtr34x"].Value = txtWalletAdd.Trim();
                    //context.Response.Cookies["PjkMN8thuRtr34x"].Expires = DateTime.Now.AddDays(1);
                    //
                }
                else
                {
                    sc = false;
                    msg = ds.Tables[0].Rows[0]["Error"].ToString();
                }
            }
            else
            {
                sc = false;
                msg = "Please fill required fields in Pay it forward form !";
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            sc = false;
            msg = "Something went wrong. Sorry, we have let our engineers know. Try again!";
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }

    public bool IsReusable
    {
        get
        {
            return false;
        }
    }
}