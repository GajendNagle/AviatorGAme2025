<%@ WebHandler Language="C#" Class="Game_Task" %>

using System;
using System.Data;
using System.Text;
using System.Web;
using System.Web.Script.Serialization;
using System.Net.Mail;
using System.IO;
using System.Web.SessionState;

public class Game_Task : IHttpHandler
{

    public HttpContext context; public HttpRequest request; public HttpResponse response;
    public bool sc;
    public string msg, dtl, strJson, DisPos, DipsType;
    public static string UserID = "", RsltNum = "", Type = "";
    DynamicDtls objgdb = new DynamicDtls(); DataSet ds; DataTable dt;
    public class test
    {
        public bool Success { get; set; }
        public string Message { get; set; }
        public string detail { get; set; }
        public string aid { get; set; }
        public test(bool sc, string msg, string dtl)
        {
            Success = sc;
            Message = msg;
            detail = dtl;
        }
    }

    public void handleRequest()
    {
        writeJson(new test(sc, msg, dtl));
    }
    public void ProcessRequest(HttpContext _context)
    {
        context = _context;
        request = _context.Request;
        response = _context.Response;
        context.Response.ContentType = "application/json";
        UserID = "";
        if (context.Request.Cookies["Tap190Nvw92mst"] != null && context.Request.QueryString["Vs"] != null)
        {
            objgdb.FillWebSiteEmailCompany();
            /////////
            UserID = DB.base64Decod(context.Request.Cookies["Tap190Nvw92mst"].Value);
            /////////
            DisPos = context.Request.QueryString["Vs"].ToString();
            ////////
            if (DisPos == "taskaddfund")
            {
                Type = context.Request["Type"].Trim();
                this.taskaddfund();
            }
            if (DisPos == "loadtaskaddfund")
            {
                Type = context.Request["Type"].Trim();
                this.loadtaskaddfund();
            }
            if (DisPos == "taskfirstinvite")
            {
                Type = context.Request["Type"].Trim();
                this.taskfirstinvite();
            }
            if (DisPos == "loadtaskfirstinvite")
            {
                Type = context.Request["Type"].Trim();
                this.loadtaskfirstinvite();
            }
            if (DisPos == "tasklrnrchg")
            {
                Type = context.Request["Type"].Trim();
                this.tasklrnrchg();
            }
            if (DisPos == "loadtasklrnaddfund")
            {
                Type = context.Request["Type"].Trim();
                this.loadtasklrnaddfund();
            }
            if (DisPos == "taskorders")
            {
                Type = context.Request["Type"].Trim();
                this.taskorders();
            }
            if (DisPos == "taskthsndorders")
            {
                Type = context.Request["Type"].Trim();
                this.taskorders();
            }
            if (DisPos == "tasktenthsndorders")
            {
                Type = context.Request["Type"].Trim();
                this.taskorders();
            }
            handleRequest();
        }
        else
        {
            context.Response.Write("<script>window.open('../../login.html','_top');</script>");
            //context.Response.Redirect("../amp.html","_top");
        }
    }
    public void writeJson(object _object)
    {
        JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer();
        string jsondata = javaScriptSerializer.Serialize(_object);
        writeRaw(jsondata);
    }

    public void writeRaw(string text)
    {
        context.Response.Write(text);
    }
    private void taskaddfund()
    {
        try
        {
            ds = objgdb.ByProcedure("dbo.Pro_GameTaskreward", new string[] { "Flag", "MemId" },
                   new string[] { Type, UserID }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {

                if (ds.Tables[0].Rows[0]["Rslt"].ToString() == "IsOk")
                {
                    sc = true;
                    msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                }
                else
                {
                    sc = false;
                    if (ds.Tables[0].Rows[0]["Sts"].ToString() == "1")
                    {
                        dtl = "1";
                        msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                    }
                    else
                    {
                        msg = "../Game-Fund-Request.html";
                        dtl = "0";
                    }


                }
            }
            else
            {
                sc = false;
                msg = "Sorry, Something went wrong please try later";
            }

        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    //////////
    private void taskfirstinvite()
    {
        try
        {
            ds = objgdb.ByProcedure("dbo.Pro_GameTaskreward", new string[] { "Flag", "MemId" },
                   new string[] { Type, UserID }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0]["Rslt"].ToString() == "IsOk")
                {
                    sc = true;
                    msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                }
                else
                {
                    sc = false;
                    if (ds.Tables[0].Rows[0]["Sts"].ToString() == "1")
                    {
                        dtl = "1";
                        msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                    }
                    else
                    {
                        msg = "../my-profile.html?TB=PS";
                        dtl = "0";
                    }
                }
            }
            else
            {
                sc = false;
                msg = "Sorry, Something went wrong please try later";
            }

        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    //////////
    private void loadtaskaddfund()
    {
        try
        {
            ds = objgdb.ByProcedure("dbo.Pro_GameTaskreward", new string[] { "Flag", "MemId" },
                   new string[] { Type, UserID }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {

                if (ds.Tables[0].Rows[0]["Sts"].ToString() == "1")
                {
                    sc = true;
                }
                else
                {
                    sc = false;

                }
            }
            else
            {
                sc = false;
                msg = "Sorry, Something went wrong please try later";
            }

        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    ////////
    private void loadtaskfirstinvite()
    {
        try
        {
            ds = objgdb.ByProcedure("dbo.Pro_GameTaskreward", new string[] { "Flag", "MemId" },
                   new string[] { Type, UserID }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {

                if (ds.Tables[0].Rows[0]["Sts"].ToString() == "1")
                {
                    sc = true;
                }
                else
                {
                    sc = false;

                }
            }
            else
            {
                sc = false;
                msg = "Sorry, Something went wrong please try later";
            }

        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    /////////
    private void tasklrnrchg()
    {
        try
        {
            ds = objgdb.ByProcedure("dbo.Pro_GameTaskreward", new string[] { "Flag", "MemId" },
                   new string[] { Type, UserID }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {

                if (ds.Tables[0].Rows[0]["Rslt"].ToString() == "IsOk")
                {
                    sc = true;
                    msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                }
                else
                {
                    sc = false;
                    msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                    //if (ds.Tables[0].Rows[0]["Sts"].ToString() == "1")
                    //{
                    //    dtl = "1";
                    //    msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                    //}
                    //else
                    //{
                    //    //msg = "../Game-Fund-Request.html";
                    //    dtl = "0";
                    //}


                }
            }
            else
            {
                sc = false;
                msg = "Sorry, Something went wrong please try later";
            }

        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    ////////////
    private void loadtasklrnaddfund()
    {
        try
        {
            ds = objgdb.ByProcedure("dbo.Pro_GameTaskreward", new string[] { "Flag", "MemId" },
                   new string[] { Type, UserID }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0]["Sts"].ToString() == "1")
                {
                    sc = true;
                }
                else
                {
                    sc = false;

                }
            }
            else
            {
                sc = false;
                msg = "Sorry, Something went wrong please try later";
            }

        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    ////////////////
    private void taskorders()
    {
        try
        {
            ds = objgdb.ByProcedure("dbo.Pro_GameTaskreward", new string[] { "Flag", "MemId" },
                   new string[] { Type, UserID }, "");
            if (ds.Tables[0].Rows.Count > 0)
            {

                if (ds.Tables[0].Rows[0]["Rslt"].ToString() == "IsOk")
                {
                    sc = true;
                    msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                }
                else
                {
                    sc = false;
                    if (ds.Tables[0].Rows[0]["Sts"].ToString() == "1")
                    {
                        dtl = "1";
                        msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                    }
                    else
                    {
                        msg = "parity.html";
                        dtl = "0";
                    }


                }
            }
            else
            {
                sc = false;
                msg = "Sorry, Something went wrong please try later";
            }

        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    ////////////////
    public static string DataTable2Json(DataTable dt)
    {
        StringBuilder jsonBuilder = new StringBuilder();

        for (int i = 0; i < dt.Rows.Count; i++)
        {
            jsonBuilder.Append("{");
            for (int j = 0; j < dt.Columns.Count; j++)
            {
                jsonBuilder.Append("\"");
                jsonBuilder.Append(dt.Columns[j].ColumnName);
                jsonBuilder.Append("\":\"");
                jsonBuilder.Append(dt.Rows[i][j].ToString());
                jsonBuilder.Append("\",");
            }
            if (dt.Columns.Count > 0)
            {
                jsonBuilder.Remove(jsonBuilder.Length - 1, 1);
            }
            jsonBuilder.Append("},");
        }
        if (dt.Rows.Count > 0)
        {
            jsonBuilder.Remove(jsonBuilder.Length - 1, 1);
        }

        return jsonBuilder.ToString();
    }
    public static string Dataset2Json(DataSet ds, int total)
    {
        StringBuilder json = new StringBuilder();

        foreach (DataTable dt in ds.Tables)
        {
            json.Append("[");
            json.Append(DataTable2Json(dt));
            json.Append("]");
        }
        return json.ToString();
    }
    public bool IsReusable
    {
        get
        {
            return false;
        }
    }

}