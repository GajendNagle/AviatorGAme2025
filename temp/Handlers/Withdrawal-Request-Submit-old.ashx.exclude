<%@ WebHandler Language="C#" Class="Withdrawal_Request_Submit" %>
using System;
using System.Collections.Generic;
using System.Text;
using System.Web;
using System.Web.Script.Serialization;
using System.Net.Mail;
using System.IO;
using System.Data;
using System.Web.SessionState;

public class Withdrawal_Request_Submit : IHttpHandler {
    public HttpContext context;
    public HttpRequest request;
    public HttpResponse response;
    public bool sc;
    public static string msg, Msgs, dtl, RtnRlt, error = "", amount = "", result="",AutoWithNo = "", strJson, UserID = "", getStatus = "", ReqCurrcy = "", eMailAddss = "", txtTopUpAmount = "", txtSecPwd = "", PaymentMd = "",
        txtRsbs = "", txtLBbs = "", txtOBValbs = "", txtRCBbs = "", TRXadd = "", txtAOBbs = "", Mem_email = "", MName = "", txtMABbs = "", txtLVLbs = "", txtGPIbs = "", txtGwthbs="";
    public Double TotWW = 0.00;
    DynamicDtls objgdb = new DynamicDtls();
    DataSet ds;

    libCoinPaymentsNET.CoinPayments cp = new libCoinPaymentsNET.CoinPayments("0834e173199b7eAfFe9dFfca42f7F52Bf02E81d722D5F5153345E3d0bc66a023", "44f6b5a81c96bcc20543d7689e959c100f822dc341c57350618e7f7c22f6f5a9"); //private key,public key
    public class test
    {
        public bool Success { get;set;}
        public string Message { get;set;}
        public string detail { get;set;}
        public string aid { get; set; }
        public test(bool sc, string msg, string dtl)
        {
            Success = sc;
            Message = msg;
            detail = dtl;
        }
    }

    public void handleRequest()
    {
        writeJson(new test(sc, msg, dtl));
    }

    public void ProcessRequest(HttpContext _context)
    {
        context = _context;
        request = _context.Request;
        response = _context.Response;
        context.Response.ContentType = "application/json";
        /////////
        if (context.Request.Cookies["Tap190Nvw92mst"] != null)
        {
            UserID = DB.base64Decod(context.Request.Cookies["Tap190Nvw92mst"].Value).ToString();
            //////
            txtTopUpAmount = context.Request["txtTopUpAmount"].Trim();
            txtSecPwd = context.Request["txtSecPwd"].Trim();
            PaymentMd = context.Request["PaymentMd"].Trim();
            //txtRsbs = context.Request["txtRsbs"].Trim();
            //txtLBbs = context.Request["txtLBbs"].Trim();
            //txtOBValbs = context.Request["txtOBValbs"].Trim();
            //txtRCBbs = context.Request["txtRCBbs"].Trim();
            txtAOBbs = context.Request["txtMCBbs"].Trim();
            txtMABbs = "";// context.Request["txtMABbs"].Trim();
            txtLVLbs = context.Request["txtLVLbs"].Trim();
            txtGPIbs = "";// context.Request["txtGPIbs"].Trim();
            txtGwthbs = ""; //context.Request["txtDGwth"].Trim();
            TRXadd = context.Request["TRXadd"].Trim();
            //////////vvvvvvvvvvvvvvv            
            ///////// vvvvvvvvvvv
            GiveHelpOrder();
            //BindResultUpdt("W92483376", "CWFC5WL7FUDDYZJS8YGRLR4OKO", "1", "19.53491429");
            ////////
            handleRequest();
        }
        else
        {
            context.Response.Write("<script>window.open('login.html','_top');</script>");
        }
    }
    public void writeJson(object _object)
    {
        JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer();
        string jsondata = javaScriptSerializer.Serialize(_object);
        writeRaw(jsondata);
    }

    public void writeRaw(string text)
    {
        context.Response.Write(text);
    }
    public void GiveHelpOrder()
    {
        try
        {
            if (txtTopUpAmount != "" && txtSecPwd != "" && PaymentMd != "")
            {
                ds = objgdb.ByProcedure("[ProcWithFromUser_FmUP]", new string[] { "Memid", "Amt", "WtihdType", "DlyWlt", "LvlWlt", "ORbitWlt", "RecpWlt", "AddOnWlt", "Pm" }
                            , new string[] { UserID, txtTopUpAmount.Trim(), txtSecPwd.Trim(), txtGwthbs.Trim(),txtLVLbs.Trim(), txtMABbs.Trim(), txtGPIbs.Trim(), txtAOBbs.Trim(), PaymentMd.Trim() }, "das");
                if (ds.Tables[0].Rows[0]["Rlt"].ToString() == "IsOk")
                {
                    sc = true;
                    msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                    //msg = "<span style='color:#2E962E;'>" + ds.Tables[0].Rows[0]["Msg"].ToString() + "</span>";
                    /////////
                    Mem_email = ds.Tables[0].Rows[0]["Mem_email"].ToString();
                    MName = ds.Tables[0].Rows[0]["MName"].ToString();
                    /////////
                    try
                    {
                        string Message123 =
                       // @"<div style='margin: 0;padding: 0;'><div style='width: 100%;height: 100%;background-color:#fafafa ;'> <div style='margin:0 auto; width:600px; height:100%; font-family:verdana;'><div style='background-color: #fafafa; padding: 15px 0 15px;'><img src='http://" + DynamicDtls.WebSite2 + "/website-logo/logo1.svg' alt='logo' style=' margin-left: 10px; height: auto; width: 150px; '/> <strong style='float: right;padding-right: 10px;'>For 24/7 support </strong> <div style=' padding: 0 10px 0px; margin-top: -20px; text-align: right; font-family: sans-serif;'>" + DynamicDtls.Email + "</div></div><div style=' width: 100%; background-color: white; border-top: 11px solid #57ab57; padding: 20px 0 20px; '> <h3 style=' font-size:29px;margin: 0; text-align: center; '> <span style='color:Green;font-weight:bolder'>Hi,</span> " + MName + "</h3><p style=' text-align: center; font-size: 20px;margin: 5px;font-family: sans-serif;'>Congratulations !!!<br />Your Withdrawal Request of  <b>$" + txtTopUpAmount.Trim() + "</b>  has been submitted successfully.<br /> We will monitor your Txn-has in blockchain & Request amount.</p></div><div style=' background-color:#058205;width:100%; padding: 20px 0 20px; text-align:left; '> <p style='font-family:Verdana;font-size: 19px; color:white; margin-left:22px;'>Thanks & Regards <br/> Support Team " + DynamicDtls.WebSite2 + "</p></div></div><div style='background-color: #E9E9E9; margin-top: -12px'> <div style='margin:0 auto; width:600px; height:100%; font-family:verdana; text-align:center;'><div><p style=' color: gray; font-size: 12px;    padding-top: 10px; '> Please do not reply to this email. Email send to this address will not be answered.</p></div></div></div></div></div>";
                       @"<div style='margin: 0;padding: 0;'><div style='width: 100%;height: 100%;background-color:#fafafa ;'><div style='margin:0 auto; width:600px; height:100%; font-family:verdana;'><div style='background-color: #1d1d1d; padding: 10px 0 10px;'> <img src='http://" + DynamicDtls.WebSite2 + "/Website-Logo/logo-1.svg?v=1.1' alt='logo' style=' margin-left: 10px; height: auto; width: auto; ' /> <span style='float: right; margin-top: 15px; color: #fff;'><strong style='padding-right: 10px;font-size: 15px;margin-top: 6px;'>For 24/7 support </strong><br /><span style='margin-top: -20px;text-align: right;font-family: sans-serif;font-size: 14px;'>" + DynamicDtls.Email + "</span></span></div><div style=' width: 100%; background-color: white; border-top: 3px solid #01579b; padding: 20px 0 25px; '><h3 style=' font-size:29px;margin: 0; text-align: center; '> <span style='color: #01579b; font-weight: bolder'>Hi,</span> " + MName + "</h3><p style=' text-align: center; font-size: 17px;margin: 5px;font-family: sans-serif;'> Congratulations !!!</p><p style=' text-align: center;font-size: 17px;margin: 5px;font-family: sans-serif;'> Your Withdrawal Request of <b><span style='color: #e85038;'>" + txtTopUpAmount.Trim() + "</span></b> has been submitted successfully.</p></div><div style=' background-color: #01579b; width: 100%; padding: 5px 0 5px; text-align: left; '><p style='font-family:Verdana;font-size: 15px; color:#fff; margin-left:22px;'> Thanks & Regards <br /> Support Team " + DynamicDtls.CompName + " <br> <small style='font-size:11px;'> Please do not reply to this email. Email send to this address will not be answered. </small></p></div></div><div style='display:none;background-color: #E9E9E9; margin-top: -12px;padding: 5px;width: 592px;margin: 0px auto;'><div style='margin:0 auto; width:600px; height:100%; font-family:verdana; text-align:center;'><div><p style=' color: gray; font-size: 12px; padding-top: 10px; '> Please do not reply to this email. Email send to this address will not be answered.</p></div></div></div></div></div>";

                        //this.SendEmailToUser(Mem_email, " Withdrawal Request Submitted ", Message123);
                    }
                    catch { }
                    //////////vvvv

                    // if (txtTopUpAmount != "" && txtSecPwd != "" && PaymentMd != "")
                    // {
                    //context.Response.Write(new PaymentGetwayPayout().TransferDlyPayout(mobile_number, amount, beneficiary_name, account_number, ifsc, channel_id, client_id, provider_id));
                    try
                    {
                        JavaScriptSerializer serializer = new JavaScriptSerializer();
                        // dynamic item = serializer.Deserialize<object>(new Block_Chain().ImpsTransaction("173431885160892", mobno, beneficiaryid, amount, orderid,"", ""));
                        // dynamic item = serializer.Deserialize<object>(new Block_Chain().ImpsTransaction("173431885160892", mobno, beneficiaryid, CntIFSC, amount, orderid, "BONUS", "", ""));
                        SortedList<string, string> parms = new SortedList<string, string>();
                        ///
                        amount =  ds.Tables[0].Rows[0]["Amt"].ToString();  //context.Request["txtReqAmt"].Trim(); //"1"
                        ReqCurrcy = ds.Tables[0].Rows[0]["Pm"].ToString(); //"TRX";// context.Request["paymode"].Trim();
                        AutoWithNo = ds.Tables[0].Rows[0]["AutoWithNo"].ToString();
                        eMailAddss = TRXadd;// "TGZdrDUQDF6adwG76iWkEzb6pp9f3ytyLM";// context.Request["eMailAddss"].Trim();
                        ///
                        // parms.Add("amount", amount);
                        // parms.Add("currency", ReqCurrcy);
                        // parms.Add("currency2", "USD");
                        // parms.Add("address", eMailAddss);
                        // parms.Add("ipn_url", "http://globaltrend.io/UrsrB8F9HcA/Handlers/CoinPayments-IPN-WithR.ashx");
                        // parms.Add("note", UserID);
                        // parms.Add("auto_confirm", "1");
                        // //
                        // dynamic objValue;
                        // var ret = cp.CallAPI("create_withdrawal", parms);
                        // Dictionary<string, object> dict = new Dictionary<string, object>();

                        // ret.TryGetValue("result", out objValue);
                        // dict = objValue;
                        //// error = dict["error"].ToString();
                        //// result = dict["result"].ToString();
                        // BindResultUpdt(AutoWithNo, dict["id"].ToString(), dict["status"].ToString(), dict["amount"].ToString());                            
                        //if (getStatus != "")
                        //{
                        //    BindResultUpdt();
                        //}
                    }
                    catch (Exception ex)
                    {
                        DB.WriteLog(this.ToString() + "\n" + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
                        //context.Response.Write(ex.Message);
                        sc = false;
                        //msg = "<div class='alert alert-danger alert-bordered fade in' style='margin:5px;'>" + ds.Tables[0].Rows[0]["Msg"].ToString() + "<span class='close' data-dismiss='alert'>&times;</span></div>";
                        msg = "Sorry, Something is wrong please try later !";
                        RejectRequest(AutoWithNo);
                    }
                    // }
                }
                else
                {
                    sc = false;
                    //msg = "<div class='alert alert-danger alert-bordered fade in' style='margin:5px;'>" + ds.Tables[0].Rows[0]["Msg"].ToString() + "<span class='close' data-dismiss='alert'>&times;</span></div>";
                    msg = ds.Tables[0].Rows[0]["Msg"].ToString();
                }
            }
            else
            {
                sc = false;
                //msg = "<span style='color:#FF8A00;'>Please fill required fields !</span>";
                msg = "Please fill required fields !";
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            sc = false;
            //msg = "<div class='alert alert-danger alert-bordered fade in' style='margin:5px;'>Sorry, Something is wrong please try later !<span class='close' data-dismiss='alert'>&times;</span></div>"; 
            msg = "Sorry, Something is wrong please try later !";
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }
    protected void SendEmailToUser(string EmailId, string Subjects, string Message)
    {
        objgdb.FillWebSiteEmailCompany();

        try
        {
            SmtpClient SmtpClient = new SmtpClient();
            MailMessage msg = new MailMessage(DynamicDtls.Email, EmailId, Subjects, Message);
            msg.From = new MailAddress(DynamicDtls.Email, DynamicDtls.TopCompName);
            SmtpClient.Host = DynamicDtls.EMailPort;
            System.Net.NetworkCredential cr = new System.Net.NetworkCredential(DynamicDtls.Email, DynamicDtls.EMailPWD);
            SmtpClient.Port = 25;
            SmtpClient.Credentials = cr;
            msg.IsBodyHtml = true;
            SmtpClient.Send(msg);
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            sc = false;
            msg = "Server is bussy, Please visit later !!!";
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }

    private void RejectRequest(string AutoWithNo)
    {
        try   //Withdrawal_req_status
        {


            //  ds = objgdb.ByProcedure("[PROC_RESPONSE_WITHDRAWAL_REQ]", new string[] { "Req_ID", "memid", "transdt", "UplodeFile", "status", "TransId", "Type", "txtRemarkp", "inctype", "Mobile", "Benfcid" },
            //    new string[] { wid.ToString(), UserID.ToString(), gettime.ToString(), "IMPS", getStatus.ToString(), gettxid.ToString(), "COMPLETE_AGAIN", getdesc.ToString(), "", getmobiUSD.ToString(), getbeneficiaryid.ToString() }, "");

            ds = objgdb.ByProcedure("[PROC_RESPONSE_WITHDRAWAL_REQ]", new string[] { "Req_ID", "memid", "transdt", "UplodeFile", "status", "TransId", "Type", "txtRemarkp", "inctype" },
               new string[] { AutoWithNo.ToString(), UserID.ToString(), "", "", "", "", "REJECT_REQUEST", "", "" }, "");


            if (ds.Tables[0].Rows.Count > 0)
            {
                msg = ds.Tables[0].Rows[0]["MSG"].ToString();
                // context.Response.Write("## Payout Sent Details ## PayoutID:" + PayoutIDs + ", Account-No: " + account_number + ", Status: " + PGStatus + ", Msg: " + PGMessage + ", Amount: " + amount);
                //Console.WriteLine(string.Concat("Hi ", data.FirstName, " " + data.LastName)); 
                ///{"status":2,"status_id":2,"utr":"","report_id":2124545,"orderid":"","message":"FAILURE"}
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            context.Response.Write(ex.Message);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }

    private void BindResultUpdt(string AutoWithNo, string TxnID, string Status,  string currency2Amt)
    {
        try   //Withdrawal_req_status
        {


            //  ds = objgdb.ByProcedure("[PROC_RESPONSE_WITHDRAWAL_REQ]", new string[] { "Req_ID", "memid", "transdt", "UplodeFile", "status", "TransId", "Type", "txtRemarkp", "inctype", "Mobile", "Benfcid" },
            //    new string[] { wid.ToString(), UserID.ToString(), gettime.ToString(), "IMPS", getStatus.ToString(), gettxid.ToString(), "COMPLETE_AGAIN", getdesc.ToString(), "", getmobiUSD.ToString(), getbeneficiaryid.ToString() }, "");

            ds = objgdb.ByProcedure("[PROC_RESPONSE_WITHDRAWAL_REQ]", new string[] { "Req_ID", "memid", "transdt", "UplodeFile", "status", "TransId", "Type", "txtRemarkp", "inctype" },
               new string[] { AutoWithNo.ToString(), UserID.ToString(), "", "", Status.ToString(), TxnID.ToString(), "COMPLETE_AGAIN", currency2Amt.ToString(), "" }, "");


            if (ds.Tables[0].Rows.Count > 0)
            {
                msg = ds.Tables[0].Rows[0]["MSG"].ToString();
                // context.Response.Write("## Payout Sent Details ## PayoutID:" + PayoutIDs + ", Account-No: " + account_number + ", Status: " + PGStatus + ", Msg: " + PGMessage + ", Amount: " + amount);
                //Console.WriteLine(string.Concat("Hi ", data.FirstName, " " + data.LastName)); 
                ///{"status":2,"status_id":2,"utr":"","report_id":2124545,"orderid":"","message":"FAILURE"}
            }
        }
        catch (Exception ex)
        {
            DB.WriteLog(this.ToString() + " Error Msg :" + ex.Message + "\n" + "Event Info :" + ex.StackTrace);
            context.Response.Write(ex.Message);
        }
        finally
        {
            if (ds != null) { ds.Dispose(); }
        }
    }


    public bool IsReusable
    {
        get
        {
            return false;
        }
    }

}